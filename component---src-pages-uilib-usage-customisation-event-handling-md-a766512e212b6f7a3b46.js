(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{1198:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return j}),t.d(n,"_frontmatter",function(){return T});var a=t(22),o=t.n(a),c=t(12),m=t.n(c),p=t(10),s=t.n(p),r=t(13),d=t.n(r),i=t(11),l=t.n(i),b=t(14),g=t.n(b),u=t(2),v=t(4),h=t.n(v),D=t(0),M=t(20),j=function(e){function n(e){var t;return m()(this,n),(t=d()(this,l()(n).call(this,e))).layout=null,t}return g()(n,e),s()(n,[{key:"render",value:function(){var e=this.props,n=e.components;o()(e,["components"]);return Object(u.d)(D.MDXTag,{name:"wrapper",components:n},Object(u.d)(D.MDXTag,{name:"h1",components:n},"Event Handling"),Object(u.d)(D.MDXTag,{name:"p",components:n},"The ",Object(u.d)(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"dnb-ui-lib")," offers a couple of different ways to handling events:"),Object(u.d)(D.MDXTag,{name:"ol",components:n},Object(u.d)(D.MDXTag,{name:"li",components:n,parentName:"ol"},"the declarative way to set and handle events (the way we SET the event is declarative)"),Object(u.d)(D.MDXTag,{name:"li",components:n,parentName:"ol"},"the imperative way to set and handle events")),Object(u.d)(D.MDXTag,{name:"p",components:n},"Have a look at the following basic examples:"),Object(u.d)(D.MDXTag,{name:"p",components:n},"The ",Object(u.d)(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"dnb-ui-lib")," uses ",Object(u.d)(D.MDXTag,{name:"em",components:n,parentName:"p"},"snake case")," (",Object(u.d)(D.MDXTag,{name:"strong",components:n,parentName:"p"},"snake_case"),") to define the event name property (e.g. ",Object(u.d)(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"on_click")," or ",Object(u.d)(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"on_change"),"). Read more about the ",Object(u.d)(D.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"uilib/development/naming"}},"naming conventions"),"."),Object(u.d)(D.MDXTag,{name:"h2",components:n},"React"),Object(u.d)(D.MDXTag,{name:"p",components:n},"Some of the most basic event handling in React."),Object(u.d)(D.MDXTag,{name:"h3",components:n},"Stateless Component"),Object(u.d)(M.a,{useRender:!0},"\nconst myHandler = () => alert('Hello')\nrender(<Button text=\"Declarative\" on_click={myHandler} />)\n"),Object(u.d)(D.MDXTag,{name:"h3",components:n},"Lifecycle Component"),Object(u.d)(D.MDXTag,{name:"p",components:n},"This example requires also support for class properties."),Object(u.d)(D.MDXTag,{name:"h4",components:n},"Declarative"),Object(u.d)(D.MDXTag,{name:"pre",components:n},Object(u.d)(D.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx"}},"import { Button } from 'dnb-ui-lib'\n\nexport default class MyComponent extends React.Component {\n  myHandler = event => {}\n  render() {\n    return <Button text=\"Declarative\" on_click={this.myHandler} />\n  }\n}\n")),Object(u.d)(D.MDXTag,{name:"h4",components:n},"Imperative"),Object(u.d)(D.MDXTag,{name:"pre",components:n},Object(u.d)(D.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx"}},"export default class MyComponent extends React.Component {\n  constructor(props) {\n    super(props)\n    this._ref = React.createRef()\n  }\n  componentDidMount() {\n    const eventId = this._ref.current.addEvent('on_change', event => {})\n    this._ref.current.removeEvent(eventId)\n  }\n  render() {\n    return <Button text=\"Imperative\" ref={this._ref} />\n  }\n}\n")),Object(u.d)(D.MDXTag,{name:"h2",components:n},"Vue"),Object(u.d)(D.MDXTag,{name:"p",components:n},"Use either the ",Object(u.d)(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"@click")," or ",Object(u.d)(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"v-on:click")," event binding property.\nOr else you could also use the imperative ",Object(u.d)(D.MDXTag,{name:"strong",components:n,parentName:"p"},"ref")," method."),Object(u.d)(D.MDXTag,{name:"h4",components:n},"Declarative"),Object(u.d)(D.MDXTag,{name:"pre",components:n},Object(u.d)(D.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx"}},"// Template\n<dnb-button @click=\"handleClick\">Declarative</dnb-button>\n\n// JS\nimport dnb from 'dnb-ui-lib/components/vue'\nconst components = dnb.getComponents(Vue)\n...\nmethods: {\n  handleClick: e => {}\n},\ncomponents\n...\n")),Object(u.d)(D.MDXTag,{name:"h4",components:n},"Imperative"),Object(u.d)(D.MDXTag,{name:"pre",components:n},Object(u.d)(D.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx"}},"// Template\n<dnb-button ref=\"my_button\">Imperative</dnb-button>\n\n// JS\nimport dnb from 'dnb-ui-lib/components/vue'\nconst components = dnb.getComponents(Vue)\n...\nmethods: {\n  handleClick: e => {}\n},\nmounted() {\n  this.$refs.my_button.addEvent('on_click', this.handleClick)\n},\ncomponents\n...\n")),Object(u.d)(D.MDXTag,{name:"h2",components:n},"HTML & ES5"),Object(u.d)(D.MDXTag,{name:"p",components:n},"You may also take a look at the example projects in the repo, called ",Object(u.d)(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"example-html"),";"),Object(u.d)(D.MDXTag,{name:"pre",components:n},Object(u.d)(D.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-html"}},'\x3c!-- Declarative --\x3e\n<dnb-button text="Declarative" on_click="myScope.on_click" />\n<script>\n  function MyClass() {}\n  MyClass.prototype.on_click = function(event) {}\n  window.myScope = new MyClass()\n<\/script>\n\n\x3c!-- Imperative --\x3e\n<dnb-button text="Imperative" />\n<script>\n  var elem = document.querySelector(\'dnb-button[text=Imperative]\')\n  var eventId = elem.addEvent(\'on_click\', function(event) {})\n  elem.removeEvent(eventId)\n<\/script>\n')),Object(u.d)(D.MDXTag,{name:"h2",components:n},"Dispatch Imperative Event"),Object(u.d)(D.MDXTag,{name:"p",components:n},"Besides the event handler methods, ",Object(u.d)(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"addEvent")," and ",Object(u.d)(D.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"removeEvent"),", there is also a method to dispatch an event:"),Object(u.d)(D.MDXTag,{name:"pre",components:n},Object(u.d)(D.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"element.fireEvent('on_click', { value: 'Custom Value' })\n")))}}]),n}(h.a.Component);j.isMDXComponent=!0;var T={title:"Event Handling",draft:!1,order:7}}}]);
//# sourceMappingURL=component---src-pages-uilib-usage-customisation-event-handling-md-a766512e212b6f7a3b46.js.map