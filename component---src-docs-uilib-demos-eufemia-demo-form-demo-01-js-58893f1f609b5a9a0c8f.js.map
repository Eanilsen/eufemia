{"version":3,"sources":["webpack:///./src/docs/uilib/demos/eufemia-demo/form-demo-01.js","webpack:///./src/docs/uilib/demos/layout/Layout.js"],"names":["WidthLimit","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_7__","target","name","styles","HeaderSection","Section","HeaderTitleWrapper","Space","IngressRaw","P","Ingress","props","_emotion_core__WEBPACK_IMPORTED_MODULE_8__","_extends","top","bottom","Attachment","FileRow","Add","DividerSection","defaultValues","toggleButtonOptionsValue","yesNoQuestionValue","firstInputValue","secondInputValue","textareValue","switchIsChecked","defaultErrors","switchErrorMessage","FormDemo","_useState2","_slicedToArray","useState","currentValues","updateValues","_useState4","currentErrors","updateErrors","_layout_Layout__WEBPACK_IMPORTED_MODULE_12__","react_helmet__WEBPACK_IMPORTED_MODULE_10___default","a","lang","style_type","dnb_ui_lib_src_elements__WEBPACK_IMPORTED_MODULE_13__","dnb_ui_lib_src_components__WEBPACK_IMPORTED_MODULE_14__","active_item","use_navigation","data","title","on_change","e","console","log","vertical","prevent_submit","on_submit","spacing","Group","value","_ref","_objectSpread2","text","label","_ref2","description","_ref3","_ref4","rows","cols","_ref5","icon","AttachmentIcon","variant","TrashIcon","icon_position","label_position","checked","_ref6","on_change_ends","_ref7","status","on_click","goToNextPage","type","SaveIcon","navigateTo","Wrapper","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","WrapperInner","Main","LayoutWrapper","children","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","className","propTypes","PropTypes","node","isRequired"],"mappings":"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","file":"component---src-docs-uilib-demos-eufemia-demo-form-demo-01-js-58893f1f609b5a9a0c8f.js","sourcesContent":["/**\n * This is a quick demo of a Eufemia form.\n * This demo is mainly to demonstrate the visual part,\n * but includes also some event handling - but no state management.\n *\n */\n\nimport React, { useState } from 'react'\nimport Head from 'react-helmet'\nimport { navigateTo } from 'gatsby'\nimport styled from '@emotion/styled'\n\n// App layout\nimport Layout from '../layout/Layout'\n\n// Get Eufemia in\nimport { H1, H2, P } from 'dnb-ui-lib/src/elements'\nimport {\n  FormSet,\n  FormRow,\n  Input,\n  Textarea,\n  Section,\n  StepIndicator,\n  ToggleButton,\n  Icon,\n  Button,\n  Switch,\n  Space\n} from 'dnb-ui-lib/src/components'\nimport {\n  save_alt_01 as SaveIcon,\n  trash as TrashIcon,\n  attachment as AttachmentIcon\n} from 'dnb-ui-lib/src/icons'\n\n// Visual helper to limit the width inside of our layout\nconst WidthLimit = styled.div`\n  max-width: 42rem;\n  .dnb-input__input {\n    max-width: 10rem;\n  }\n  @media (max-width: 40em) {\n    textarea {\n      width: 90vw;\n    }\n  }\n`\n\n// set the header hight\nconst HeaderSection = styled(Section)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  height: 16rem;\n`\n// center the h1 vertically\nconst HeaderTitleWrapper = styled(Space)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n`\n\n// Custom paragraph\nconst IngressRaw = styled(P)`\n  font-weight: var(--font-weight-demi);\n  color: var(--color-emerald-green);\n`\nconst Ingress = props => (\n  <IngressRaw top=\"x-small\" bottom=\"small\" {...props} />\n)\n\n// Attachment area\nconst Attachment = styled(Space)`\n  .dnb-button {\n    margin-left: 1.75rem;\n  }\n`\nAttachment.FileRow = styled.span`\n  .dnb-icon {\n    margin-right: 0.5rem;\n  }\n`\nAttachment.Add = styled(Space)`\n  .dnb-button {\n    margin-left: -0.5rem;\n  }\n`\n\n// The bottom section / divider has some extra CSS\nconst DividerSection = styled(Section)`\n  display: flex;\n  justify-content: space-between;\n  .dnb-button + .dnb-button {\n    margin-left: 1rem;\n  }\n  @media (max-width: 40em) {\n    .dnb-button + .dnb-button {\n      margin-left: 0.5rem;\n    }\n  }\n`\n\n// Default local states/values\nconst defaultValues = {\n  toggleButtonOptionsValue: 'second',\n  yesNoQuestionValue: 'yes',\n  firstInputValue: 2000,\n  secondInputValue: 200,\n  textareValue:\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis.',\n  switchIsChecked: true\n}\nconst defaultErrors = {\n  switchErrorMessage: 'Sorry, this has to be unchecked.'\n}\n\nconst FormDemo = () => {\n  // Event handling\n  const [currentValues, updateValues] = useState(defaultValues)\n  const [currentErrors, updateErrors] = useState({})\n\n  return (\n    <Layout>\n      <Head>\n        <html lang=\"en\" />\n        <title>Eufemia - form demo 1</title>\n      </Head>\n\n      <HeaderSection style_type=\"mint-green\">\n        <HeaderTitleWrapper top=\"x-large\">\n          <H1 style_type=\"small\">Card complaint</H1>\n        </HeaderTitleWrapper>\n\n        <StepIndicator\n          active_item={0}\n          use_navigation=\"true\"\n          data={[\n            {\n              title: 'Information about the complaint'\n            },\n            {\n              title: 'Summary'\n            }\n          ]}\n          on_change={e => {\n            console.log('StepIndicator.on_change', e)\n          }}\n        />\n      </HeaderSection>\n\n      <FormSet\n        vertical\n        prevent_submit\n        on_submit={() => {\n          // console.log('FormSet.on_submit', object)\n          console.log('Show me my values:', currentValues)\n\n          // remove errors for a bit\n          updateErrors({})\n\n          // simulate error\n          if (currentValues.switchIsChecked) {\n            updateErrors(defaultErrors)\n          }\n        }}\n      >\n        <WidthLimit>\n          <Section top=\"medium\" spacing=\"x-large\" style_type=\"white\">\n            <H2>What has happened?</H2>\n            <Ingress>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n              do eiusmod tempor incididunt ut labore et dolore magna\n              aliqua. Ut enim ad minim veniam, quis nostrud exercitation.\n            </Ingress>\n\n            <ToggleButton.Group\n              value={currentValues.toggleButtonOptionsValue}\n              on_change={({ value }) =>\n                updateValues({\n                  ...currentValues,\n                  toggleButtonOptionsValue: value\n                })\n              }\n            >\n              <ToggleButton text=\"Unknown transaction\" value=\"first\" />\n              <ToggleButton\n                text=\"I did not recieve money from the ATM\"\n                value=\"second\"\n              />\n              <ToggleButton text=\"Goods not recieved\" value=\"third\" />\n              <ToggleButton text=\"Wrong goods recieved\" value=\"fourth\" />\n              <ToggleButton text=\"Fake goods recieved\" value=\"fift\" />\n              <ToggleButton text=\"Double charged\" value=\"sixth\" />\n              <ToggleButton text=\"Wrong amount charged\" value=\"seventh\" />\n              <ToggleButton text=\"I am after charged\" value=\"eighth\" />\n            </ToggleButton.Group>\n          </Section>\n\n          <Section spacing=\"x-large\">\n            <H2>Lorem ipsum</H2>\n            <Ingress>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n              do eiusmod tempor incididunt ut labore.\n            </Ingress>\n\n            <Space top=\"small\">\n              <FormRow label=\"Did you receive some money from the ATM?\">\n                <ToggleButton.Group\n                  value={currentValues.yesNoQuestionValue}\n                  on_change={({ value }) =>\n                    updateValues({\n                      ...currentValues,\n                      yesNoQuestionValue: value\n                    })\n                  }\n                >\n                  <ToggleButton text=\"Yes\" value=\"yes\" />\n                  <ToggleButton text=\"No\" value=\"no\" />\n                </ToggleButton.Group>\n              </FormRow>\n            </Space>\n\n            <Space top=\"medium\">\n              <FormRow>\n                <Input\n                  label=\"How much money did you withdraw?\"\n                  description=\"Kr\"\n                  value={currentValues.firstInputValue}\n                  on_change={({ value }) =>\n                    updateValues({\n                      ...currentValues,\n                      firstInputValue: value\n                    })\n                  }\n                />\n              </FormRow>\n            </Space>\n\n            <Space top=\"medium\">\n              <FormRow>\n                <Input\n                  label=\"How much money did you receive?\"\n                  description=\"Kr\"\n                  value={currentValues.secondInputValue}\n                  on_change={({ value }) =>\n                    updateValues({\n                      ...currentValues,\n                      secondInputValue: value\n                    })\n                  }\n                />\n              </FormRow>\n            </Space>\n\n            <Space top=\"medium\">\n              <FormRow>\n                <Textarea\n                  rows=\"6\"\n                  cols=\"40\"\n                  label=\"Do you have additional relevant information about the case?\"\n                  value={currentValues.textareValue}\n                  on_change={({ value }) =>\n                    updateValues({\n                      ...currentValues,\n                      textareValue: value\n                    })\n                  }\n                />\n              </FormRow>\n            </Space>\n          </Section>\n\n          <Section spacing=\"x-large\" style_type=\"white\">\n            <H2>Attachment</H2>\n\n            <Ingress bottom=\"x-small\">\n              If you have a receipt of the ATM transaction showing that\n              money was not dispensed, then please upload the copy as this\n              would strengthen your case.\n            </Ingress>\n\n            <Attachment>\n              <Attachment.FileRow>\n                <Icon icon={AttachmentIcon} /> <span>filname_01.jpg</span>\n              </Attachment.FileRow>\n              <Button\n                text=\"Delete\"\n                variant=\"tertiary\"\n                icon={TrashIcon}\n                icon_position=\"left\"\n              />\n            </Attachment>\n\n            <Attachment.Add top=\"x-small\">\n              <Button\n                text=\"Upload attachment\"\n                variant=\"tertiary\"\n                icon={AttachmentIcon}\n                icon_position=\"left\"\n              />\n            </Attachment.Add>\n          </Section>\n        </WidthLimit>\n\n        <Section top=\"medium\" spacing=\"medium\">\n          <Switch\n            label=\"I hereby declare that all information given is correct and to the best of my knowledge.\"\n            label_position=\"right\"\n            checked={currentValues.switchIsChecked}\n            on_change={({ checked }) => {\n              updateValues({\n                ...currentValues,\n                switchIsChecked: checked\n              })\n            }}\n            on_change_ends={({ checked }) => {\n              if (!checked) {\n                // remove errors\n                updateErrors({\n                  ...currentErrors,\n                  switchErrorMessage: null\n                })\n              }\n            }}\n            status={currentErrors.switchErrorMessage}\n            // status_animation\n          />\n        </Section>\n\n        <DividerSection spacing=\"small\" style_type=\"divider\">\n          <Button\n            text=\"Next\"\n            icon=\"chevron_right\"\n            on_click={goToNextPage}\n          />\n          <div>\n            <Button\n              text=\"Save\"\n              type=\"submit\" // This button is the required submit\n              variant=\"secondary\"\n              icon={SaveIcon}\n              icon_position=\"left\"\n            />\n            <Button\n              text=\"Cancel\"\n              variant=\"secondary\"\n              icon=\"close\"\n              icon_position=\"left\"\n              on_click={() => {\n                // remove errors\n                updateErrors({})\n\n                // reset the values\n                updateValues(defaultValues)\n              }}\n            />\n          </div>\n        </DividerSection>\n\n        <Space bottom=\"medium\" />\n      </FormSet>\n    </Layout>\n  )\n}\n\nexport default FormDemo\n\nconst goToNextPage = () => navigateTo('/form-demo-02')\n","/**\n * LayoutWrapper is include in Layout\n * with this, LayoutWrapper is included in every page\n *\n * Info:\n * Eufemia Styles are imported in \"gatsby-browser.js\"\n * But in here we define \".dnb-core-style\"\n * With this, we could have Legacy CSS somewhere in the header or footer\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`\nconst WrapperInner = styled.div`\n  /* for large screesn */\n  width: 84vw; /* apr. the same as 60rem */\n  max-width: 60rem;\n  padding: 0 1rem;\n\n  /* for small screesn */\n  @media (max-width: 40em) {\n    width: 95vw;\n    padding: 0;\n  }\n`\nconst Main = styled.main``\n\nconst LayoutWrapper = ({ children }) => {\n  return (\n    <Wrapper className=\"dnb-core-style\">\n      <WrapperInner>\n        {/* <header className=\"app-header\">header</header> */}\n        <Main>{children}</Main>\n        {/* <footer className=\"app-footer\">Happy Eufemia {'🖋'}</footer> */}\n      </WrapperInner>\n    </Wrapper>\n  )\n}\nLayoutWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default LayoutWrapper\n"],"sourceRoot":""}