(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{1200:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return j}),a.d(n,"_frontmatter",function(){return O});var t=a(22),o=a.n(t),m=a(12),c=a.n(m),p=a(10),s=a.n(p),r=a(13),i=a.n(r),d=a(11),l=a.n(d),g=a(14),b=a.n(g),u=a(2),h=a(4),T=a.n(h),M=a(0),j=function(e){function n(e){var a;return c()(this,n),(a=i()(this,l()(n).call(this,e))).layout=null,a}return b()(n,e),s()(n,[{key:"render",value:function(){var e=this.props,n=e.components;o()(e,["components"]);return Object(u.d)(M.MDXTag,{name:"wrapper",components:n},Object(u.d)(M.MDXTag,{name:"h1",components:n},"Theming"),Object(u.d)(M.MDXTag,{name:"p",components:n},"Read the ",Object(u.d)(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"/uilib/usage/customisation/styling"}},"Styling examples")," on how to include styles and a theme.\nThis section is about how theming works and how to actually create a custom theme."),Object(u.d)(M.MDXTag,{name:"h2",components:n},"How Themes are built"),Object(u.d)(M.MDXTag,{name:"p",components:n},'By default, all the HTML Elements (components) are built by separating the "visual styling" parts from the "functional layout" parts. This way we can create new custom visual styles.'),Object(u.d)(M.MDXTag,{name:"p",components:n},"Of course, we can still overwrite the functional layout properties to customize our theme even further."),Object(u.d)(M.MDXTag,{name:"p",components:n},"The included themes are built using SASS. Simply because we can reuse the ",Object(u.d)(M.MDXTag,{name:"em",components:n,parentName:"p"},"@mixin"),"'s and variables from SASS."),Object(u.d)(M.MDXTag,{name:"p",components:n},"We have the ",Object(u.d)(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Main Theming File"),", which is located here: ",Object(u.d)(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"dnb-ui-lib/src/style/themes/dnb-theme-[THEME].scss")),Object(u.d)(M.MDXTag,{name:"p",components:n},'From here, we "can" reuse some default theming mechanism, just to have a fallback:'),Object(u.d)(M.MDXTag,{name:"pre",components:n},Object(u.d)(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-scss"}},"@import '../theme-ui/dnb-theme-ui.scss';\n")),Object(u.d)(M.MDXTag,{name:"p",components:n},"All the additional sub theming files (for every component) are automatically added to the ",Object(u.d)(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Main Theming File")," by running ",Object(u.d)(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"$ yarn build"),". More on that further down."),Object(u.d)(M.MDXTag,{name:"p",components:n},"If we need a custom theming file for one or more components, we can do so by creating ",Object(u.d)(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"dnb-ui-lib/src/components/[COMPONENT]/style/dnb-button-theme-[THEME].scss"),"."),Object(u.d)(M.MDXTag,{name:"h2",components:n},"Local Theming setup"),Object(u.d)(M.MDXTag,{name:"p",components:n},"There are several solutions to ",Object(u.d)(M.MDXTag,{name:"strong",components:n,parentName:"p"},"create a new theme"),".\nOne of which is by using the ",Object(u.d)(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://yarnpkg.com/lang/en/docs/cli/link/"}},"linking feature of Yarn"),"."),Object(u.d)(M.MDXTag,{name:"h3",components:n},Object(u.d)(M.MDXTag,{name:"em",components:n,parentName:"h3"},"Method:")," yarn link and SASS"),Object(u.d)(M.MDXTag,{name:"p",components:n},"Make sure Your project can handle ",Object(u.d)(M.MDXTag,{name:"strong",components:n,parentName:"p"},"*",".scss")," files."),Object(u.d)(M.MDXTag,{name:"p",components:n},Object(u.d)(M.MDXTag,{name:"strong",components:n,parentName:"p"},"1.")," make a copy of the ",Object(u.d)(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/dnbexperience/eufemia"}},"repository"),". Place it somewhere locally on your machine"),Object(u.d)(M.MDXTag,{name:"p",components:n},Object(u.d)(M.MDXTag,{name:"strong",components:n,parentName:"p"},"2.")," change your command line (Terminal) directory to the sub package ",Object(u.d)(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"dnb-ui-lib")," (",Object(u.d)(M.MDXTag,{name:"em",components:n,parentName:"p"},"eufemia/packages/dnb-ui-lib"),")"),Object(u.d)(M.MDXTag,{name:"p",components:n},Object(u.d)(M.MDXTag,{name:"strong",components:n,parentName:"p"},"3.")," make the package ready for development by running:"),Object(u.d)(M.MDXTag,{name:"pre",components:n},Object(u.d)(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-bash"}},"$ yarn install && yarn build && yarn link\n")),Object(u.d)(M.MDXTag,{name:"p",components:n},Object(u.d)(M.MDXTag,{name:"strong",components:n,parentName:"p"},"4.")," on your application root directory, run:"),Object(u.d)(M.MDXTag,{name:"pre",components:n},Object(u.d)(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-bash"}},'$ yarn link "dnb-ui-lib"\n')),Object(u.d)(M.MDXTag,{name:"p",components:n},Object(u.d)(M.MDXTag,{name:"strong",components:n,parentName:"p"},"5.")," That's it. Now you can use (import/require) the NPM module in your application like:"),Object(u.d)(M.MDXTag,{name:"pre",components:n},Object(u.d)(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { Button } from 'dnb-ui-lib/components'\nimport 'dnb-ui-lib/style/components'\n\n// See the \"src\" in the path?\nimport 'dnb-ui-lib/src/style/themes/dnb-theme-[MY THEME].scss'\n")),Object(u.d)(M.MDXTag,{name:"p",components:n},Object(u.d)(M.MDXTag,{name:"strong",components:n,parentName:"p"},"6.")," Don't forget to add ",Object(u.d)(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},'"dnb-ui-lib": "*"')," with the respective version (alongside React) to your dependencies:"),Object(u.d)(M.MDXTag,{name:"pre",components:n},Object(u.d)(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-json"}},'  "dependencies": {\n    "dnb-ui-lib": "*",\n    "react": "^16",\n    "react-dom": "^16",\n    ...\n  }\n')),Object(u.d)(M.MDXTag,{name:"p",components:n},Object(u.d)(M.MDXTag,{name:"strong",components:n,parentName:"p"},"7.")," ",Object(u.d)(M.MDXTag,{name:"em",components:n,parentName:"p"},"Note:")," Every time you create a new theme file, you have to run ",Object(u.d)(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"yarn build")," again. This way the new theme file gets added/bundled to the ",Object(u.d)(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Main Theming File"),"."))}}]),n}(T.a.Component);j.isMDXComponent=!0;var O={title:"Theming",draft:!1,order:5}}}]);
//# sourceMappingURL=component---src-pages-uilib-usage-customisation-theming-md-43f830adfffa8a1d305e.js.map