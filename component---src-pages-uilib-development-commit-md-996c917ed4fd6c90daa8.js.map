{"version":3,"sources":["webpack:///./src/pages/uilib/development/commit.md"],"names":["_frontmatter","title","draft","order","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_8__","_extends","mdxType","parentName","href","isMDXComponent"],"mappings":"gzBAKO,IAAMA,EAAe,CAC1BC,MAAS,SACTC,OAAS,EACTC,MAAS,GAQLC,EAAc,CAClBJ,gBAEIK,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,EAAAH,EAAA,gBACD,OAAOI,OAAAC,EAAA,IAAAD,CAACN,EAADQ,EAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EH,OAAAC,EAAA,IAAAD,CAAA,oBACAA,OAAAC,EAAA,IAAAD,CAAA,SAAGA,OAAAC,EAAA,IAAAD,CAAA,UAAQI,WAAW,KAAnB,wBAAgDJ,OAAAC,EAAA,IAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,UAAa,CACxEC,KAAQ,uBADqC,yBAGnDL,OAAAC,EAAA,IAAAD,CAAA,+DAA0DA,OAAAC,EAAA,IAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,KAAQ,CAC5EC,KAAQ,gEAD8C,oBAA1D,KAGAL,OAAAC,EAAA,IAAAD,CAAA,6BACAA,OAAAC,EAAA,IAAAD,CAAA,uCAAkCA,OAAAC,EAAA,IAAAD,CAAA,UAAQI,WAAW,KAAnB,mBAAlC,gBAAsGJ,OAAAC,EAAA,IAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,KAAQ,CACxHC,KAAQ,+EAD0F,yBAAtG,+CAGAL,OAAAC,EAAA,IAAAD,CAAA,UACEA,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAKJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,MAAvB,gCACpBJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAKJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,MAAvB,gCACpBJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAKJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,MAAvB,mCAEtBJ,OAAAC,EAAA,IAAAD,CAAA,gDACAA,OAAAC,EAAA,IAAAD,CAAA,UACEA,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAKJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,MAAvB,kCACpBJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAKJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,MAAvB,iCACpBJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAKJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,MAAvB,mCAEtBJ,OAAAC,EAAA,IAAAD,CAAA,4BAAuBA,OAAAC,EAAA,IAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,KAAQ,CACzCC,KAAQ,sDADW,yBAAvB,KAGAL,OAAAC,EAAA,IAAAD,CAAA,gCACAA,OAAAC,EAAA,IAAAD,CAAA,qIAAgIA,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,aAAhI,OAA6LJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,oBAA7L,4FACAJ,OAAAC,EAAA,IAAAD,CAAA,2FACAA,OAAAC,EAAA,IAAAD,CAAA,UACEA,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,YACAJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,UACAJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,cAEFJ,OAAAC,EAAA,IAAAD,CAAA,2OAIJL,EAAWW,gBAAiB","file":"component---src-pages-uilib-development-commit-md-996c917ed4fd6c90daa8.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Commit\",\n  \"draft\": false,\n  \"order\": 2\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Commit`}</h1>\n    <p><strong parentName=\"p\">{`Make sure You follow `}<a parentName=\"strong\" {...{\n          \"href\": \"https://semver.org\"\n        }}>{`Semantic Versioning`}</a></strong></p>\n    <p>{`Version numbers are handled automatically by using `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/semantic-release/semantic-release#readme\"\n      }}>{`semantic-release`}</a>{`.`}</p>\n    <h2>{`Commit Messages`}</h2>\n    <p>{`Make sure to decorate Your `}<strong parentName=\"p\">{`commit messages`}</strong>{` with either `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/semantic-release/semantic-release#commit-message-format\"\n      }}>{`commit message format`}</a>{` or simply use the following three methods:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fix: an example fix message`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`feat: this is a new feature`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`break: breaking change in API`}</inlineCode></li>\n    </ul>\n    <p>{`You can use these synonyms as well:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`patch: an example fix message`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`minor: this is a new feature`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`major: breaking change in API`}</inlineCode></li>\n    </ul>\n    <p>{`Read more about `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/bahmutov/simple-commit-message\"\n      }}>{`simple-commit-message`}</a>{`.`}</p>\n    <h2>{`Committing changes`}</h2>\n    <p>{`During a commit (locally), your commit content (code) will be tested with both Static and Integration tests. You may run `}<inlineCode parentName=\"p\">{`yarn test`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`yarn test:update`}</inlineCode>{` before you try to commit. You may also write new tests for your code before committing.`}</p>\n    <p>{`The Code Base is based on several Static Tests to help the code to be uniform:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Prettier`}</li>\n      <li parentName=\"ul\">{`ESLint`}</li>\n      <li parentName=\"ul\">{`StyleLint`}</li>\n    </ul>\n    <p>{`You may consider to install plugins for your editor of choice - to visualize and run the code formatters and linters based on the given config files. This way you can immediately see how the code will and have to consist.`}</p>\n\n    </MDXLayout>;\n}\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}