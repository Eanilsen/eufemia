{"data":{"site":{"siteMetadata":{"description":"The DNB Style Guide is the go to place for all who has to design, develop or create visuals with the DNB design."}},"mdx":{"fields":{"title":"Best Practices of typography","header":"UI Library"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h1\",\n      components: components\n    }, `Typography`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Headings and styling`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Never use Headings (like `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `<h4>`), `) for only styling purposes. Headings exist in first place to practice correct semantics, witch again will gain all kind of users.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Use headings where You think that someone with a Screen Reader would have benefits of finding and reading a title.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `H1`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Always, yes, always have only one `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `h1`), ` on a side. Have it where it makes most sense of what content is about.`));\n  }\n\n}"}}},"pageContext":{"id":"d58198da-0a62-5829-8769-a94f77ad8428"}}