{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digitan WEB applications for DNB."}},"mdx":{"fields":{"title":null},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Description`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `To ensure a consistent class structure and to ensure that the class is owned by the DNB UI Library, all classes in the UI Library are prefixed with `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `dnb-`), `. Read more about that in the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/uilib/development/naming\"\n      }\n    }, `Naming conventions`)), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `CSS Classes`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Reusing classes in the markup instead of using SCSS extends or `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `mixins`), ` will prevent duplicate values in our CSS.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `All CSS helper classes are to be found in `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `src/style/core/helper-classes.scss`)), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Mixins`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Most helper classes are SCSS `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `mixins`), ` which are then applied to the class when invoked. The helper `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `mixins`), ` can be found in `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `src/style/core/utilities.scss`), `.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Usage`), React.createElement(Examples, null));\n  }\n\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"id":"699097df-d189-55b5-a33a-c262ab52f639"}}