{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digitan WEB applications for DNB."}},"mdx":{"fields":{"title":"HTML Elements"},"code":{"body":"function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar layoutProps = {};\n\nvar MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    _classCallCheck(this, MDXContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  _createClass(MDXContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n      return React.createElement(MDXTag, {\n        name: \"wrapper\",\n        components: components\n      }, React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components\n      }, \"HTML Elements\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"The \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\"\n      }, \"dnb-ui-lib\"), \" contains a DNB styling for the most common used \", React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\"\n        }\n      }, \"HTML Elements\"), \", defined by the UX Team at DNB. You may also have a look at \", React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"href\": \"/uilib/typography\"\n        }\n      }, \"Typography\"), \" for Headings and Paragraph usage.\"), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components\n      }, \"How to use\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"By default, no HTML Element Tag will be styled, except for \", React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"href\": \"/uilib/typography\"\n        }\n      }, \"Headings and Paragraphs\"), \" with no CSS class defined.\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"In order to apply a style, You have to define a CSS class, like:\"), React.createElement(CodeBlock, {\n        reactLive: true,\n        hidePreview: true\n      }, \"\\n<a href=\\\"/\\\" className=\\\"dnb-anchor\\\">Text Link</a>\\n<blockquote className=\\\"dnb-blockquote\\\">\\n  Dis leo ala tractatos ei quo.\\n</blockquote>\\n\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"Although, You have also the possibility to load a \", React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"href\": \"/uilib/usage/customisation/styling#sub-packages\"\n        }\n      }, \"sub package\"), \", called \", React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"p\"\n      }, \"dnb-ui-elements\"), \" witch applies all the styles to the HTML tags automatically. Use it with caution, as they can effect existing styles as well.\"), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components\n      }, \"React JSX\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"For those using JSX with React, You can simply use the wrapper Components.\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-jsx\"\n        }\n      }, \"import { H1, H2, Lead, P, Link } from 'dnb-ui-lib/elements'\\n\\nrender(\\n  <article>\\n    <H1>My h1</H1>\\n    <P>My Paragraph</P>\\n  </article>\\n)\\n\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"They work seamlessly with Styled Components as well:\"), React.createElement(ComponentBox, {\n        noInline: true,\n        scope: {\n          Link: Link\n        }\n      }, \"\\nconst StyledLink = styled(Link)`\\n  font-size: var(--font-size-default);\\n  font-weight: var(--font-weight-default);\\n`\\nrender(<StyledLink href=\\\"/\\\" target=\\\"_blank\\\">Styled Link</StyledLink>)\\n\"), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components\n      }, \"Overview\"), React.createElement(MDXTag, {\n        name: \"ul\",\n        components: components\n      }, React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\"\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#anchor\"\n        }\n      }, \"Anchor (Text Link)\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\"\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#blockquote\"\n        }\n      }, \"Blockquote\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\"\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#lists\"\n        }\n      }, \"Lists\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\"\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#tables\"\n        }\n      }, \"Tables\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\"\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#textarea\"\n        }\n      }, \"Textarea\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\"\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#missing-html-elements\"\n        }\n      }, \"Select\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\"\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#missing-html-elements\"\n        }\n      }, \"Radio\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\"\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#missing-html-elements\"\n        }\n      }, \"Checkbox\"))), React.createElement(Anchor, null), React.createElement(Blockquote, null), React.createElement(Lists, null), React.createElement(Tables, null), React.createElement(Textarea, null), React.createElement(MDXTag, {\n        name: \"hr\",\n        components: components\n      }), React.createElement(OtherElements, null));\n    }\n  }]);\n\n  return MDXContent;\n}(React.Component);\n\nreturn MDXContent;\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"id":"81ec907c-ac55-5fa7-a3e3-bbcb109d9d53"}}