{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digitan WEB applications for DNB."}},"mdx":{"fields":{"title":"Typography"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h1\",\n      components: components\n    }, `Typography`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Font Face`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The DNB default Font Family is `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `Fedra Sans Std`), `. This font, together with its weights is loaded and imported with `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `@font-face`), ` in `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `/css/core/fonts.scss`), `. The font is included in the library package.\nTo make sure You don't load all of the font faces at once, You apply a font `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `weights`), ` to load the predefined font faces.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Read more how to use the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/uilib/typography/font-weights/\"\n      }\n    }, `different weights`), `.`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Headings`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `DNB UX Team has currently only defined tree levels of heading styles (h1, h2 and h3). But level 4, 5 and 6 is also supported by the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `dnb-ui-lib`), `.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `In case You want to have a header look like a heading, You can use these classes:`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `.dnb-h1`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `.dnb-h2`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `.dnb-lead`))), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Read more about `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/uilib/usage/best-practices/for-typography\"\n      }\n    }, `best practices for typography`), `.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Heading examples`), React.createElement(CodeBlock, {\n      reactLive: true,\n      hideCode: true\n    }, `\n<h1 className=\"dnb-h1\">H1</h1>\n<h2 className=\"dnb-h2\">H2</h2>\n<h3 className=\"dnb-h3\">H3</h3>\n<h4 className=\"dnb-h4\">H4</h4>\n<h5 className=\"dnb-h5\">H5</h5>\n<h6 className=\"dnb-h6\">H6</h6>\n`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Paragraph`), React.createElement(CodeBlock, {\n      reactLive: true,\n      hideCode: true\n    }, `\n<p>\n  Here is a paragraph with some nonsense <a href=\"/\" className=\"dnb-anchor\">Lorem Ipsum</a> comes from <b>sections</b> 1.10.32 and 1.10.33 of \"de <i>Finibus Bonorum</i> et <u>Malorum</u>\" (<strong>The Extremes</strong> of Good and Evil) by Cicero, written in 45 BC.\n</p>\n`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Read more `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/quickguide-designer/fonts/\"\n      }\n    }, `about Fonts in the Designer Guides`), `.`));\n  }\n\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"id":"25bc8903-e8b0-58e9-9f2d-49d3aed45998"}}