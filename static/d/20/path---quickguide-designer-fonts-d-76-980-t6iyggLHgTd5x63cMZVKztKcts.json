{"data":{"site":{"siteMetadata":{"description":"The DNB Style Guide is the go to place for all who has to design, develop or create visuals with the DNB design."}},"mdx":{"fields":{"title":"Fonts & Typography","header":"Quickguide Designers - Fonts & Typography"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components\n  }, `Fonts`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `NB!`), `\nThe DNB Brandbook states that the main DNB font is `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `Fedra Sans Alt Pro`), `.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Web and mobile applications use `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `Fedra Sans Standard`), `. You can `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"/assets/fonts/DNBFedraSans.zip\"\n    }\n  }, `download`), ` and use the web fonts as long as the font are shown under the DNB main domain (`, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, `dnb.no`), `) or sub domains.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `The Source of Truth for the Downloadable fonts are located in the `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://github.com/eggsdesign/dnb-design-system/tree/develop/packages/dnb-ui-lib/src/assets/fonts\"\n    }\n  }, `repository`), `: `, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, `dnb-design-system/packages/dnb-ui-lib/src/assets/fonts/`), `. Changes to the content of this folder will be included during a portal build process like `, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, `yarn build`), `.`), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Typographic rules`));\n});"}}},"pageContext":{"id":"80f3a039-6f29-50b3-847f-7243f5b4c6b1"}}