{"data":{"site":{"siteMetadata":{"description":"The DNB Style Guide is the go to place for all who has to design, develop or create visuals with the DNB design."}},"mdx":{"fields":{"title":"HTML Elements"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h1\",\n      components: components\n    }, `HTML Elements`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `dnb-ui-lib`), ` contains a DNB styling for the most common used `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\"\n      }\n    }, `HTML Elements`), `, defined by the UX Team at DNB. You may also have a look at `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/uilib/typography\"\n      }\n    }, `Typography`), ` for Headings and Paragraph usage.`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `How to use`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `By default, no HTML Element Tag will be styled, except for `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/uilib/typography\"\n      }\n    }, `Headings and Paragraphs`), ` with no CSS class defined.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `In order to apply a style, You have to define a CSS class, like:`), React.createElement(CodeBlock, {\n      reactLive: true,\n      hidePreview: true\n    }, `\n<a href=\"/\" className=\"dnb-anchor\">Text Link</a>\n<blockquote className=\"dnb-blockquote\">\n  Dis leo ala tractatos ei quo.\n</blockquote>\n`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Although, You have also the possibility to load a `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/uilib/usage/customisation/styling#sub-packages\"\n      }\n    }, `sub package`), `, called `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `dnb-ui-elements`), ` witch applies all the styles to the HTML tags automatically. Use it with caution, as they can effect existing styles as well.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Overview`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#anchor\"\n      }\n    }, `Anchor (Text Link)`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#blockquote\"\n      }\n    }, `Blockquote`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#lists\"\n      }\n    }, `Lists`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#tables\"\n      }\n    }, `Tables`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#textarea\"\n      }\n    }, `Textarea`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#missing-html-elements\"\n      }\n    }, `Select`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#missing-html-elements\"\n      }\n    }, `Radio`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#missing-html-elements\"\n      }\n    }, `Checkbox`))), React.createElement(Anchor, null), React.createElement(Blockquote, null), React.createElement(Lists, null), React.createElement(Tables, null), React.createElement(Textarea, null), React.createElement(MDXTag, {\n      name: \"hr\",\n      components: components\n    }), React.createElement(OtherElements, null));\n  }\n\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"id":"81ec907c-ac55-5fa7-a3e3-bbcb109d9d53"}}