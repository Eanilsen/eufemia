{"data":{"site":{"siteMetadata":{"description":"The DNB Style Guide is the go to place for all who has to design, develop or create visuals with the DNB design."}},"mdx":{"fields":{"title":"Web Components","header":"UI Library"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components\n  }, `Web Components`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `So called `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://www.w3.org/TR/custom-elements/\"\n    }\n  }, `Custom Elements`), `, running as a `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://github.com/w3c/webcomponents/\"\n    }\n  }, `Web Component`), ` can be used to run the `, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, `dnb-ui-lib`), ` Components in all other frameworks like Dojo, Vue and Angular.`), React.createElement(MDXTag, {\n    name: \"hr\",\n    components: components\n  }), React.createElement(MDXTag, {\n    name: \"h5\",\n    components: components\n  }, `Example`), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-jsx\",\n      \"metastring\": \"\"\n    }\n  }, `// Method #1\nimport dnb from 'dnb-ui-lib'\ndnb.enableWebComponents()\n\n// Method #2\nimport 'dnb-ui-lib/web-components'\n\n// Method #3 - note, web-component without \"s\"\nimport 'dnb-ui-lib/components/button/web-component'\n`)), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-html\",\n      \"metastring\": \"\"\n    }\n  }, `<!-- Button -->\n<dnb-button icon=\"chevron-right\" text=\"Custom Element\" />\n\n<!-- Input -->\n<dnb-form-label for_id=\"form-input\" >Label for this Input</dnb-form-label>\n<dnb-input id=\"form-input\" value=\"My Value\" placeholder=\"My Placeholder\" />\n`)), React.createElement(\"dnb-button\", {\n    icon: \"chevron-right\",\n    text: \"Custom Element\"\n  }), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(\"dnb-form-label\", {\n    for_id: \"form-input\"\n  }), `Label for this Input`, React.createElement(\"dnb-input\", {\n    id: \"form-input\",\n    value: \"My Value\",\n    placeholder: \"My Placeholder\"\n  })));\n});"}}},"pageContext":{"id":"bd14af71-9685-5e83-8fc4-94f8704c5886"}}