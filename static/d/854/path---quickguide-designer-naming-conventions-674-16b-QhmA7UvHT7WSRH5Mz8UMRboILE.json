{"data":{"site":{"siteMetadata":{"description":"The DNB Style Guide is the go to place for all who has to design, develop or create visuals with the DNB design."}},"mdx":{"fields":{"title":"Naming Conventions","header":"Quickguide Designers - Naming conventions"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components\n  }, `Naming conventions (Designers)`), React.createElement(\"div\", null, React.createElement(\"blockquote\", null, \"\\\"Persist the same component name throughout design, code and conversation\\\"\"), React.createElement(\"cite\", null, \"- Nathan Curtis\")), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Naming space`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Naming Colors`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Eufemia FTW uses a simple hypenated naming structure - no camelCase. Android and iOS use camelCse, dots and underscores`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Colors have a naming convention across all platforms and formats. Please refer to the table in 'colors' section (link).`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Naming Design files`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `We don't have a naming convention for design files in Figma. However, it is encouraged to name your design file frames and interface designs with clear logical names in english.`), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, `Figma files`), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, `Figma Symbols`), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, `Figma frames`));\n});"}}},"pageContext":{"id":"4e8826b6-cb6e-5216-82b7-c945897ff43a"}}