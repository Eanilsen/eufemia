{"data":{"site":{"siteMetadata":{"description":"The DNB Style Guide is the go to place for all who has to design, develop or create visuals with the DNB design."}},"mdx":{"fields":{"title":"Screen readers"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h1\",\n      components: components\n    }, `Screen reader`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `In many ways, You have to kind of rethink both navigation and content presentation to make sure people with screen readers can navigate and read the application content properly.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `To avoid much work afterwards, make sure You actually check You application with a screen readers `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `regularly during development`), `.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Mobile`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Also, screen readers `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `behave differently`), ` on mobile phones than desktop browsers. So, use both in Your frontend tooling.`));\n  }\n\n}"}}},"pageContext":{"id":"d7ff0c7c-34d8-5912-9a3a-209cf97e6108"}}