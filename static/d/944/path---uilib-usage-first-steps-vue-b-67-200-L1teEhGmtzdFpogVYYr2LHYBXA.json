{"data":{"site":{"siteMetadata":{"description":"The DNB Style Guide is the go to place for all who has to design, develop or create visuals with the DNB design."}},"mdx":{"fields":{"title":"Vue"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h1\",\n      components: components\n    }, `Vue JS`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `How to`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `With Vue, you could use the included `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/uilib/usage/first-steps/web-components\"\n      }\n    }, `Web Components`), ` support to get the HTML elements in place. But it's much more powerful to simply use the build in feature, powered by `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://github.com/akxcv/vuera\"\n      }\n    }, `Vuera`), `.`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-js\"\n      }\n    }, `import Vue from 'vue'\n\n// get Vuera upp and runnning\nimport dnb, { Button } from 'dnb-ui-lib/components/vue'\n\ndefault {\n  name: 'app',\n  data: () => ({...}),\n  methods: {myClickHandler: () => {}, ...},\n  // now we have our components we want to use\n  components: dnb.getComponents(Vue)\n}\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `And the syntax would look like:`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-html\"\n      }\n    }, `<template lang=\"html\">\n  <div id=\"app\" class=\"dnb-spacing\">\n    <dnb-button text=\"Button\" @on_click=\"myClickHandler\"></dnb-button>\n  </div>\n</template>\n`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Setup`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Besides `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `vue`), `, you may also install, `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `dnb-ui-lib`), `, `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `react`), ` and `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `react-dom`), `.`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-json\"\n      }\n    }, `\"dependencies\": {\n  \"dnb-ui-lib\": \"*\",\n  \"react\": \"^16\",\n  \"react-dom\": \"^16\",\n  \"vue\": \"^2\"\n},\n...\n`)));\n  }\n\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"id":"7a8e9a4b-8a88-56f7-ae21-b906b44e5392"}}