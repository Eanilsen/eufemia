{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digitan WEB applications for DNB."}},"mdx":{"fields":{"title":"Focus"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h1\",\n      components: components\n    }, `Focus Management`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Page Focus is an important part of keyboard-only navigation.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `From the technical side, we have to assign an `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `invisible`), ` focus, so the user can continue the navigation inside this new content.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `Example setup:`)), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-html\"\n      }\n    }, `<body>\n  <aside><!-- focusable navigation --></aside>\n  <main>\n    <!-- more markup with focusable HTMLElements -->\n    <h1 class=\"dnb-no-focus\" tabindex=\"-1\">Main Title</h1>\n    <a href=\"/path\">I'm now focusable on next tab</a>\n  </main>\n</body>\n`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Managing the Focus state`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Make sure You ...`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `set the focus on the content (e.g. `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `<h1 class=\"dnb-h1\">`), `) after a navigation action, initiated by the user.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `set the focus into a `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"li\"\n    }, `menu or navigation`), ` area, if it has an opening mechanism.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `also set the focus back to the content, once the menu or navigation area gets closed.`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `A more complex focus management is build in already to the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/uilib/components/modal\"\n      }\n    }, `Modal Component`), `. There we actually also disable focus possibility on the content behind, so the user only can navigate inside the modal.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Helper tool`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `dnb-ui-lib`), ` has an build in helper, to manage basic focus handling.\nThis helper also handles both the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `tabindex=\"-1\"`), ` and the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `class=\"dnb-no-focus\"`), ` situation.`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Focus helper`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-js\"\n      }\n    }, `import {\n  setPageFocusElement,\n  applyPageFocus\n} from 'dnb-ui-lib/shared/helpers'\n\n// 1. Somewhere in Your app, set either an element, or a CSS Selector\nsetPageFocusElement('.css-selector', 'MyCustomName')\n\n// 2. Later You can call this action, once it's time to activate the new focus state\napplyPageFocus('MyCustomName')\n`)), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Skip Link`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `dnb-ui-lib`), ` also has a small setup for a `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.w3.org/TR/WCAG20-TECHS/G1.html\"\n      }\n    }, `skip link`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Our solution is CSS only and should work for all kinds of App setups.\nPlace an Anchor like this one blow, on the very top of Your App content:`), React.createElement(\"div\", {\n      className: \"margin-bottom\"\n    }, React.createElement(SkipLinkExample, null)), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-html\"\n      }\n    }, `<a class=\"dnb-skip-link\" href=\"#dnb-app-content\">Skip to content</a>\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Also, place a `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `id=\"dnb-app-content\"`), ` on Your content wrapper:`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-html\"\n      }\n    }, `<body>\n    <a class=\"dnb-skip-link\" href=\"#dnb-app-content\">Skip to content</a>\n    <header>\n        <nav>\n            <!-- Nav links to skip -->\n        </nav>\n    </header>\n    <main id=\"dnb-app-content\">\n        <!-- Content goes here -->\n    </main>\n</body>\n`)));\n  }\n\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"id":"2019dac3-1b72-507b-bc25-4b70c4211697"}}