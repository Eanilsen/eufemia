{"data":{"site":{"siteMetadata":{"description":"The DNB Style Guide is the go to place for all who has to design, develop or create visuals with the DNB design."}},"mdx":{"fields":{"title":"React","header":"UI Library"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components\n  }, `React JS for the web`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `The most basic way to use the `, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, `dnb-ui-lib`), ` is like this:`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Basic Buttons`), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-jsx\",\n      \"metastring\": \"\"\n    }\n  }, `<Button text=\"Basic Button\" />\n`)), React.createElement(\"div\", {\n    className: \"demo-box\"\n  }, React.createElement(Button, {\n    text: \"Basic Button\"\n  })), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Large Buttons & Icons`), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-jsx\",\n      \"metastring\": \"\"\n    }\n  }, `<Button variant=\"secondary\" text=\"Secondary Button\" size=\"large\" icon=\"chevron-right_medium\" />\n<Button variant=\"secondary\" size=\"large\">\n  <IconPrimary icon=\"chevron-right_medium\" size=\"large\" />\n</Button>\n<Button icon=\"chevron-right_medium\" icon_size=\"large\" size=\"large\" />\n`)), React.createElement(\"div\", {\n    className: \"demo-box\"\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    text: \"Secondary Button\",\n    size: \"large\",\n    icon: \"chevron-right_medium\"\n  }), React.createElement(Button, {\n    variant: \"secondary\",\n    size: \"large\"\n  }, React.createElement(IconPrimary, {\n    icon: \"chevron-right_medium\",\n    size: \"large\"\n  })), React.createElement(Button, {\n    icon: \"chevron-right_medium\",\n    icon_size: \"large\",\n    size: \"large\"\n  })), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Extended example`), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metastring\": \"\"\n    }\n  }, `import { Button } from 'dnb-ui-lib'\n\nconst MyComponent = props => (\n  <Button text=\"Custom Element\" variant=\"tertiary\" {...props} />\n)\n`)), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Event example`), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metastring\": \"\"\n    }\n  }, `import React from 'react'\nimport { Button, Icon } from 'dnb-ui-lib/src'\nimport { hamburger_medium as hamburgerIcon } from 'dnb-ui-lib/src/icons/secondary_icons_medium'\n\nconst onClickHandler = event => {\n  console.log('onClickHandler', event)\n}\n\nconst MyComponent = () => {\n  return (\n    <Button on_click={onClickHandler}>\n      <Icon icon={hamburgerIcon} />\n    </Button>\n  )\n}\n`)), React.createElement(\"div\", {\n    className: \"demo-box\"\n  }, React.createElement(ButtonEventExample, null)));\n});"}}},"pageContext":{"id":"c6ed4c25-9872-5b19-b2b8-ab7622c94014","absPath":"/drone/src/packages/dnb-design-system-portal/src/pages/uilib/usage/first-steps/react.md","tableOfContents":{"items":[{"url":"#react-js-for-the-web","title":"React JS for the web","items":[{"items":[{"url":"#basic-buttons","title":"Basic Buttons"},{"url":"#large-buttons--icons","title":"Large Buttons & Icons"}]},{"url":"#extended-example","title":"Extended example"},{"url":"#event-example","title":"Event example"}]}]}}}