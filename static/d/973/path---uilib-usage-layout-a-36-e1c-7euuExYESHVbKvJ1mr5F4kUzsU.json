{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digitan WEB applications for DNB."}},"mdx":{"fields":{"title":"Layout"},"code":{"body":"function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar layoutProps = {};\n\nvar MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    _classCallCheck(this, MDXContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  _createClass(MDXContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n      return React.createElement(MDXTag, {\n        name: \"wrapper\",\n        components: components\n      }, React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components\n      }, \"Layout\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"To make things easy and lower the barrier of entry for using Eufemia, the UX team has decided to not force the usage of a dedicated layout system. Although, this may change in future. This allows for more freedom in designing and building interface layouts.\"), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components\n      }, \"Grid\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"There is, however a simple \", React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"href\": \"/uilib/patterns/grid\"\n        }\n      }, \"Grid Pattern with CSS helpers\"), \" in Eufemia which you can use.\"), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components\n      }, \"Spacing\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"Eufemia has a \", React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"href\": \"/quickguide-designer/spatial-system\"\n        }\n      }, \"Spatial System\"), \" with a grid of \", React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"p\"\n      }, \"8px\"), \". This is simply a guide grid which helps with making design decisions about the sizes of components, elements, margins, paddings etc.\"), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components\n      }, \"Web Applications\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"In short, only use \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\"\n      }, \"rem\"), \" for layouts and spacing and make sure ...\"), React.createElement(MDXTag, {\n        name: \"ul\",\n        components: components\n      }, React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\"\n      }, \"you always use the nearest half \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\"\n      }, \"rem\"), \" value, like \", React.createElement(MDXTag, {\n        name: \"em\",\n        components: components,\n        parentName: \"li\"\n      }, \"0.5rem\"), \", \", React.createElement(MDXTag, {\n        name: \"em\",\n        components: components,\n        parentName: \"li\"\n      }, \"1rem\"), \" or \", React.createElement(MDXTag, {\n        name: \"em\",\n        components: components,\n        parentName: \"li\"\n      }, \"1.5rem\"), \" and so forth.\"), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\"\n      }, \"you always get a \", React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"li\"\n      }, \"total computed height\"), \" within the grid.\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"This results in maintaining the integrity of the 8px base grid.\"), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components\n      }, \"Responsibility\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"If You are working together with an DNB UX Designer, You can decide freely what layout mechanism You want to use. For Web Applications we mainly use \", React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"p\"\n      }, \"CSS Flexbox\"), \" or \", React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"p\"\n      }, \"CSS Grid\"), \". But it is Your responsibility to ensure 100% consistency and compatibility.\"), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components\n      }, \"Media Queries and Breakpoints\"), React.createElement(MDXTag, {\n        name: \"ul\",\n        components: components\n      }, React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\"\n      }, React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\"\n      }, \"40em\"), \" \", React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"li\"\n      }, \"small\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\"\n      }, React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\"\n      }, \"50em\"), \" \", React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"li\"\n      }, \"medium\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\"\n      }, React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\"\n      }, \"60em\"), \" \", React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"li\"\n      }, \"large\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\"\n      }, React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\"\n      }, \"90em\"), \" \", React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"li\"\n      }, \"x-large\"), \" (is the default max-width of 1440px)\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components\n      }, \"Use \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\"\n      }, \"em\"), \" for media query sizing for best overall browser support. Read \", React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"href\": \"/uilib/usage/best-practices/for-styling#units\"\n        }\n      }, \"more abouts units\")));\n    }\n  }]);\n\n  return MDXContent;\n}(React.Component);\n\nreturn MDXContent;\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"67bebd8a-e832-506e-b50a-a19fba7a7010"}}