{"data":{"site":{"siteMetadata":{"description":"The DNB Style Guide is the go to place for all who has to design, develop or create visuals with the DNB design."}},"mdx":{"fields":{"title":"About the Library","header":"UI Library"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components\n  }, `About the Library`), React.createElement(MDXTag, {\n    name: \"blockquote\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"blockquote\"\n  }, `Why do the `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `UI Library`), ` exist?`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Simply to unify the most commonly used input elements and to work together to make every of them better by times goes on.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `At a first glance the Library my look complete, finished and polished. But its not. It's a living life library of font-end code we have to continuously work on and make better.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `So, please contribute, also You!`)), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `What I get`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `The Components are build with React. The reason for this is that React is very commonly used. And its more a kind of tool to make the internal state of a Component work seamlessly together with each other. But also the thinking of Components and reuse is a reason.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `But to make the Components work in other environments like Vue or Angular, You could use the build-in Web Components support.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `The Library is hosted on `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"npmjs.com\"\n    }\n  }, `NPM`), `, so versioning and openness is secured.`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Important parts the Library has on aim to solve`), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Accessibility (ARIA Techniques, tabindex, etc.)`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Ready to use core styles`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Font usage`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Brand Color definitions`)), React.createElement(MDXTag, {\n    name: \"h6\",\n    components: components\n  }, `Components`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `The Unser Interface Library comes with two different parts. The first and most common are the `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"/dnb-design-system/uilib/components/\"\n    }\n  }, `Components`), `.`), React.createElement(MDXTag, {\n    name: \"h6\",\n    components: components\n  }, `Patterns`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `But then there are a lot of use cases where `, React.createElement(MDXTag, {\n    name: \"em\",\n    components: components,\n    parentName: \"p\"\n  }, `components`), ` gets combined and a kind of new component comes to life. This will then be a pattern. The best pattern setup would be more a guidance, so a Developer can the a patterns as a good startd, and go from there.\nCheck out the `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"/dnb-design-system/uilib/patterns/\"\n    }\n  }, `available Patterns`), `.`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Where do I go next?`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Check out `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"/dnb-design-system/uilib/usage/\"\n    }\n  }, `the library usage`)));\n});"}}},"pageContext":{"id":"68930eb2-5390-5543-80d1-960e159b7ea0"}}