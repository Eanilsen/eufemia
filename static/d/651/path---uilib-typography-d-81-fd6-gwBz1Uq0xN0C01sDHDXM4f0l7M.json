{"data":{"site":{"siteMetadata":{"description":"The DNB Style Guide is the go to place for all who has to design, develop or create visuals with the DNB design."}},"mdx":{"fields":{"title":"Typography"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h1\",\n      components: components\n    }, `Typography`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Font Face`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The DNB default Font Family is `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `Fedra Sans Std`), `. This font, together with its weights is loaded and imported with `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `@font-face`), ` in `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `/css/core/fonts.scss`), `. The font is included in the library package.\nTo make sure You don't load all of the font faces at once, You apply a font `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `weights`), ` to load the predefined font faces.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Read more how to use the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/uilib/typography/font-weights/\"\n      }\n    }, `different weights`), `.`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Headings`), React.createElement(\"div\", {\n      className: \"example-box\"\n    }, React.createElement(\"h1\", null, \"H1\"), React.createElement(\"h2\", null, \"H2\"), React.createElement(\"h3\", null, \"H3\"), React.createElement(\"h4\", null, \"H4\"), React.createElement(\"h5\", null, \"H5\"), React.createElement(\"h6\", null, \"H6\")), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Paragraph`), React.createElement(\"div\", {\n      className: \"example-box\"\n    }, React.createElement(\"p\", null, \"Here is a paragraph with some nonsense\", React.createElement(\"a\", {\n      href: \"/\"\n    }, \"Lorem Ipsum\"), \"comes from \", React.createElement(\"b\", null, \"sections\"), \" 1.10.32 and 1.10.33 of \\\"de\", React.createElement(\"i\", null, \"Finibus Bonorum\"), \" et \", React.createElement(\"u\", null, \"Malorum\"), \"\\\" (\", React.createElement(\"strong\", null, \"The Extremes\"), \" of Good and Evil) by Cicero, written in 45 BC.\")), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Or read more `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/quickguide-designer/fonts/\"\n      }\n    }, `about fonts in the Designer Guides`), `.`));\n  }\n\n}"}}},"pageContext":{"id":"25bc8903-e8b0-58e9-9f2d-49d3aed45998"}}