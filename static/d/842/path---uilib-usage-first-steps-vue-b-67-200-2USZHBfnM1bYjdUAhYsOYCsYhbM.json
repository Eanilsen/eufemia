{"data":{"site":{"siteMetadata":{"description":"The DNB Style Guide is the go to place for all who has to design, develop or create visuals with the DNB design."}},"mdx":{"fields":{"title":"Vue","header":"UI Library"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components\n  }, `Vue JS`), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `How to`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `With Vue, You could use the included `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"/eufemia/uilib/usage/first-steps/web-components\"\n    }\n  }, `Web Components`), ` support to get the HTML Elements in place. But it's much more powerful to simply use the build in feature, powered by `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://github.com/akxcv/vuera\"\n    }\n  }, `Vuera`), `.`), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metastring\": \"\"\n    }\n  }, `import Vue from 'vue'\n\n// get Vuera upp and runnning\nimport dnb, { Button } from 'dnb-ui-lib/components/vue'\n\ndefault {\n  name: 'app',\n  data: () => ({...}),\n  methods: {myClickHandler: () => {}, ...},\n  // now we have our components we want to use\n  components: dnb.getComponents(Vue)\n}\n`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `And the Syntax would look like:`), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-html\",\n      \"metastring\": \"\"\n    }\n  }, `<template lang=\"html\">\n  <div id=\"app\" class=\"dnb-style\">\n    <dnb-button text=\"Button\" @on_click=\"myClickHandler\"></dnb-button>\n  </div>\n</template>\n`)), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Setup`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Beside `, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, `vue`), `, You may also install, `, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, `dnb-ui-lib`), `, `, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, `react`), ` and `, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, `react-dom`), `.`), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-json\",\n      \"metastring\": \"\"\n    }\n  }, `\"dependencies\": {\n  \"dnb-ui-lib\": \"*\",\n  \"react\": \"^16\",\n  \"react-dom\": \"^16\",\n  \"vue\": \"^2\"\n},\n...\n`)));\n});"}}},"pageContext":{"id":"8765d7ae-3043-51b1-bcb5-857a28071333","absPath":"/home/circleci/repo/packages/dnb-design-system-portal/src/pages/uilib/usage/first-steps/vue.md","tableOfContents":{"items":[{"url":"#vue-js","title":"Vue JS","items":[{"url":"#how-to","title":"How to"},{"url":"#setup","title":"Setup"}]}]}}}