{"data":{"site":{"siteMetadata":{"description":"The DNB Style Guide is the go to place for all who has to design, develop or create visuals with the DNB design."}},"mdx":{"fields":{"title":"Font Weights"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h1\",\n      components: components\n    }, `Font Weights`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `For now we have 3 Font Weights:`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(\"span\", {\n      className: \"dnb-typo-book\"\n    }, \"Book\"), \" (normal)\"), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(\"span\", {\n      className: \"dnb-typo-demi\"\n    }, \"Demi\"), \" (500)\"), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(\"span\", {\n      className: \"dnb-typo-medium\"\n    }, \"Medium\"), \" (600)\")), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `How to use the Weights`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-css\"\n      }\n    }, `/* I am Book */\np {\n  font-weight: normal;\n}\n\n/* I am Demi */\np {\n  font-weight: var(--font-weight-demi); /* 500 */\n}\n\n/* I am Medium */\np {\n  font-weight: var(--font-weight-medium); /* 600 */\n}\n`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Examples`), React.createElement(TypographyExamples, null));\n  }\n\n}"}}},"pageContext":{"id":"08b74776-9c9f-55de-95b4-02c3b65c45ff"}}