(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{1422:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",function(){return i}),t.d(n,"default",function(){return d});t(16),t(15),t(21),t(20),t(18),t(23),t(3),t(4);var a=t(0),r=t(73),o=t(28);function p(){return(p=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i={title:"Development",icon:"development",draft:!1},l={_frontmatter:i},s="wrapper";function d(e){var n=e.components,t=c(e,["components"]);return Object(a.mdx)(s,p({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.mdx)("h1",null,"Development"),Object(a.mdx)("p",null,"The ",Object(a.mdx)("inlineCode",{parentName:"p"},"dnb-ui-lib")," uses a ",Object(a.mdx)("a",p({parentName:"p"},{href:"https://nodejs.org"}),"Node.js")," based setup with a lot of auto generated code to make the ",Object(a.mdx)("a",p({parentName:"p"},{href:"https://reactjs.org"}),"React")," based components and patterns."),Object(a.mdx)("h2",null,"Repository"),Object(a.mdx)("p",null,Object(a.mdx)("a",p({parentName:"p"},{href:"https://github.com/dnbexperience/eufemia"}),Object(a.mdx)(o.d,{icon:r.default,size:"default",mdxType:"Icon"})," Eufemia at GitHub")),Object(a.mdx)("h2",null,"Install the repo locally on your machine"),Object(a.mdx)("pre",null,Object(a.mdx)("code",p({parentName:"pre"},{className:"language-bash"}),"# Clone the repo into your project working directory\n$ git clone https://github.com/dnbexperience/eufemia.git\n\n# Change to the directory\n$ cd eufemia\n\n# Change to the latest and most up to date Branch\n$ git checkout develop\n\n# And install the dependencies\n$ yarn install\n\n# Once the installation is done, create a local build\n$ yarn build\n\n# Optionally, run the portal locally in watch mode (http://localhost:8000)\n$ yarn start\n")),Object(a.mdx)("h2",null,"Why Yarn and not Lerna?"),Object(a.mdx)("p",null,"The mono repo ",Object(a.mdx)("inlineCode",{parentName:"p"},"dnb-design-system")," uses ",Object(a.mdx)("a",p({parentName:"p"},{href:"https://yarnpkg.com/"}),"Yarn")," (>= v1.10.1) to maintain the ",Object(a.mdx)("a",p({parentName:"p"},{href:"https://yarnpkg.com/en/docs/workspaces"}),"workspace functionality"),". Instead of using ",Object(a.mdx)("inlineCode",{parentName:"p"},"npm link")," or ",Object(a.mdx)("inlineCode",{parentName:"p"},"yarn link"),", we use packages. This simplifies the linking. and shared modules between ",Object(a.mdx)("a",p({parentName:"p"},{href:"https://docs.npmjs.com/getting-started/packages"}),"packages"),".\nYarn offers a simpler approach to workspaces, but is way more powerful in managing dependencies."))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-uilib-development-md-1618c8f21da81de767ca.js.map