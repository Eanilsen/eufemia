(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{1014:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return b}),n.d(t,"_frontmatter",function(){return f});n(16),n(17),n(26),n(27),n(34),n(15);var o=n(3),a=n(6),c=n.n(a),r=n(1);function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},c=Object.keys(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}function s(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function p(e,t){return!t||"object"!==m(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,t){return(u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var b=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=p(this,l(t).call(this,e))).layout=null,n}var n,a,m;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}(t,c.a.Component),n=t,(a=[{key:"render",value:function(){var e=this.props,t=e.components;i(e,["components"]);return Object(o.c)(r.MDXTag,{name:"wrapper",components:t},Object(o.c)(r.MDXTag,{name:"h1",components:t},"Commit"),Object(o.c)(r.MDXTag,{name:"p",components:t},Object(o.c)(r.MDXTag,{name:"strong",components:t,parentName:"p"},"Make sure You follow ",Object(o.c)(r.MDXTag,{name:"a",components:t,parentName:"strong",props:{href:"https://semver.org"}},"Semantic Versioning"))),Object(o.c)(r.MDXTag,{name:"p",components:t},"Version numbers are handled automatically by using ",Object(o.c)(r.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://github.com/semantic-release/semantic-release#readme"}},"semantic-release"),"."),Object(o.c)(r.MDXTag,{name:"h2",components:t},"Commit Messages"),Object(o.c)(r.MDXTag,{name:"p",components:t},"Make sure to decorate Your ",Object(o.c)(r.MDXTag,{name:"strong",components:t,parentName:"p"},"commit messages")," with either ",Object(o.c)(r.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://github.com/semantic-release/semantic-release#commit-message-format"}},"commit message format")," or simply use the following three methods:"),Object(o.c)(r.MDXTag,{name:"ul",components:t},Object(o.c)(r.MDXTag,{name:"li",components:t,parentName:"ul"},Object(o.c)(r.MDXTag,{name:"inlineCode",components:t,parentName:"li"},"fix: an example fix message")),Object(o.c)(r.MDXTag,{name:"li",components:t,parentName:"ul"},Object(o.c)(r.MDXTag,{name:"inlineCode",components:t,parentName:"li"},"feat: this is a new feature")),Object(o.c)(r.MDXTag,{name:"li",components:t,parentName:"ul"},Object(o.c)(r.MDXTag,{name:"inlineCode",components:t,parentName:"li"},"break: breaking change in API"))),Object(o.c)(r.MDXTag,{name:"p",components:t},"You can use these synonyms as well:"),Object(o.c)(r.MDXTag,{name:"ul",components:t},Object(o.c)(r.MDXTag,{name:"li",components:t,parentName:"ul"},Object(o.c)(r.MDXTag,{name:"inlineCode",components:t,parentName:"li"},"patch: an example fix message")),Object(o.c)(r.MDXTag,{name:"li",components:t,parentName:"ul"},Object(o.c)(r.MDXTag,{name:"inlineCode",components:t,parentName:"li"},"minor: this is a new feature")),Object(o.c)(r.MDXTag,{name:"li",components:t,parentName:"ul"},Object(o.c)(r.MDXTag,{name:"inlineCode",components:t,parentName:"li"},"major: breaking change in API"))),Object(o.c)(r.MDXTag,{name:"p",components:t},"Read more about ",Object(o.c)(r.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://github.com/bahmutov/simple-commit-message"}},"simple-commit-message"),"."),Object(o.c)(r.MDXTag,{name:"h2",components:t},"Committing changes"),Object(o.c)(r.MDXTag,{name:"p",components:t},"During a commit (locally), your commit content (code) will be tested with both Static and Integration tests. You may run ",Object(o.c)(r.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"yarn test")," or ",Object(o.c)(r.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"yarn test:update")," before you try to commit. You may also write new tests for your code before committing."),Object(o.c)(r.MDXTag,{name:"p",components:t},"The Code Base is based on several Static Tests to help the code to be uniform:"),Object(o.c)(r.MDXTag,{name:"ul",components:t},Object(o.c)(r.MDXTag,{name:"li",components:t,parentName:"ul"},"Prettier"),Object(o.c)(r.MDXTag,{name:"li",components:t,parentName:"ul"},"ESLint"),Object(o.c)(r.MDXTag,{name:"li",components:t,parentName:"ul"},"StyleLint")),Object(o.c)(r.MDXTag,{name:"p",components:t},"You may consider to install plugins for your editor of choice - to visualize and run the code formatters and linters based on the given config files. This way you can immediately see how the code will and have to consist."))}}])&&s(n.prototype,a),m&&s(n,m),t}(),f={title:"Commit",draft:!1,order:2}}}]);
//# sourceMappingURL=component---src-pages-uilib-development-commit-md-66abc97093f56351f5cc.js.map