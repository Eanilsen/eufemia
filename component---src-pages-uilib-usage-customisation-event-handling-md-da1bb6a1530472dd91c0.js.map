{"version":3,"sources":["webpack:///./src/pages/uilib/usage/customisation/event-handling.md"],"names":["_frontmatter","title","draft","order","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_8__","_extends","mdxType","parentName","href","Tags_ComponentBox__WEBPACK_IMPORTED_MODULE_9__","useRender","className","isMDXComponent"],"mappings":"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","file":"component---src-pages-uilib-usage-customisation-event-handling-md-da1bb6a1530472dd91c0.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport ComponentBox from 'Tags/ComponentBox';\nexport const _frontmatter = {\n  \"title\": \"Event Handling\",\n  \"draft\": false,\n  \"order\": 7\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Event Handling`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`dnb-ui-lib`}</inlineCode>{` offers a couple of different ways to handling events:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`the declarative way to set and handle events (the way we SET the event is declarative)`}</li>\n      <li parentName=\"ol\">{`the imperative way to set and handle events`}</li>\n    </ol>\n    <p>{`Have a look at the following basic examples:`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`dnb-ui-lib`}</inlineCode>{` uses `}<em parentName=\"p\">{`snake case`}</em>{` (`}<strong parentName=\"p\">{`snake_case`}</strong>{`) to define the event name property (e.g. `}<inlineCode parentName=\"p\">{`on_click`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`on_change`}</inlineCode>{`). Read more about the `}<a parentName=\"p\" {...{\n        \"href\": \"uilib/development/naming\"\n      }}>{`naming conventions`}</a>{`.`}</p>\n    <h2>{`React`}</h2>\n    <p>{`Some of the most basic event handling in React.`}</p>\n    <h3>{`Stateless Component`}</h3>\n    <ComponentBox useRender mdxType=\"ComponentBox\">\n      {`\nconst myHandler = () => alert('Hello')\nrender(<Button text=\"Declarative\" on_click={myHandler} />)\n`}\n    </ComponentBox>\n    <h3>{`Lifecycle Component`}</h3>\n    <p>{`This example requires also support for class properties.`}</p>\n    <h4>{`Declarative`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Button } from 'dnb-ui-lib'\n\nexport default class MyComponent extends React.Component {\n  myHandler = event => {}\n  render() {\n    return <Button text=\"Declarative\" on_click={this.myHandler} />\n  }\n}\n`}</code></pre>\n    <h4>{`Imperative`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`export default class MyComponent extends React.Component {\n  constructor(props) {\n    super(props)\n    this._ref = React.createRef()\n  }\n  componentDidMount() {\n    const eventId = this._ref.current.addEvent('on_change', event => {})\n    this._ref.current.removeEvent(eventId)\n  }\n  render() {\n    return <Button text=\"Imperative\" ref={this._ref} />\n  }\n}\n`}</code></pre>\n    <h2>{`Vue`}</h2>\n    <p>{`Use either the `}<inlineCode parentName=\"p\">{`@click`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`v-on:click`}</inlineCode>{` event binding property.\nOr else you could also use the imperative `}<strong parentName=\"p\">{`ref`}</strong>{` method.`}</p>\n    <h4>{`Declarative`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// Template\n<dnb-button @click=\"handleClick\">Declarative</dnb-button>\n\n// JS\nimport dnb from 'dnb-ui-lib/components/vue'\nconst components = dnb.getComponents(Vue)\n...\nmethods: {\n  handleClick: e => {}\n},\ncomponents\n...\n`}</code></pre>\n    <h4>{`Imperative`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// Template\n<dnb-button ref=\"my_button\">Imperative</dnb-button>\n\n// JS\nimport dnb from 'dnb-ui-lib/components/vue'\nconst components = dnb.getComponents(Vue)\n...\nmethods: {\n  handleClick: e => {}\n},\nmounted() {\n  this.$refs.my_button.addEvent('on_click', this.handleClick)\n},\ncomponents\n...\n`}</code></pre>\n    <h2>{`HTML & ES5`}</h2>\n    <p>{`You may also take a look at the example projects in the repo, called `}<inlineCode parentName=\"p\">{`example-html`}</inlineCode>{`;`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!-- Declarative -->\n<dnb-button text=\"Declarative\" on_click=\"myScope.on_click\" />\n<script>\n  function MyClass() {}\n  MyClass.prototype.on_click = function(event) {}\n  window.myScope = new MyClass()\n</script>\n\n<!-- Imperative -->\n<dnb-button text=\"Imperative\" />\n<script>\n  var elem = document.querySelector('dnb-button[text=Imperative]')\n  var eventId = elem.addEvent('on_click', function(event) {})\n  elem.removeEvent(eventId)\n</script>\n`}</code></pre>\n    <h2>{`Dispatch Imperative Event`}</h2>\n    <p>{`Besides the event handler methods, `}<inlineCode parentName=\"p\">{`addEvent`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`removeEvent`}</inlineCode>{`, there is also a method to dispatch an event:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`element.fireEvent('on_click', { value: 'Custom Value' })\n`}</code></pre>\n\n    </MDXLayout>;\n}\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}