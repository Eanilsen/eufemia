(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{1459:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",function(){return s}),t.d(n,"default",function(){return l});t(16),t(14),t(22),t(21),t(19),t(23),t(3),t(4);var o=t(0),a=t(10),i=t(351);function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}function c(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s={title:"Icon",draft:!1},p={_frontmatter:s},d="wrapper";function l(e){var n=e.components,t=c(e,["components"]);return Object(o.mdx)(d,r({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.mdx)("h1",null,"Accessibility of Icons"),Object(o.mdx)("p",null,"By using inline SVG, we have the possibility to make graphical assets both ",Object(o.mdx)("strong",{parentName:"p"},"responsive")," and ",Object(o.mdx)("strong",{parentName:"p"},"interactive"),". In order to do so, use the ",Object(o.mdx)("a",r({parentName:"p"},{href:"/uilib/components/icon"}),"Icon")," or ",Object(o.mdx)("a",r({parentName:"p"},{href:"/uilib/components/icon-primary"}),"IconPrimary")," component. These components provide the needed runtime processing."),Object(o.mdx)("h2",null,"Decorative Icons"),Object(o.mdx)("p",null,"If your icons are purely ",Object(o.mdx)("strong",{parentName:"p"},"decorative"),", youâ€™ll need to manually add an ",Object(o.mdx)("strong",{parentName:"p"},"aria-hidden")," (results in ",Object(o.mdx)("inlineCode",{parentName:"p"},'aria-hidden="true"'),') attribute to each of your icons so your app is "accessible".'),Object(o.mdx)(a.a,{scope:{Beach:i.default},mdxType:"ComponentBox"},'\n<Icon icon={Beach} size="64" title="Beach" aria-hidden="true" />\n'),Object(o.mdx)("h2",null,"Responsive Icons"),Object(o.mdx)("p",null,"Use ",Object(o.mdx)("inlineCode",{parentName:"p"},'size="auto"')," to force the icon to inherit the size of its parent element."),Object(o.mdx)(a.a,{scope:{Beach:i.default},mdxType:"ComponentBox"},'\n<h1>My H1 with an icon <Icon icon={Beach} title="Beach" size="auto" /></h1>\n<h4>My H4 with the same icon <Icon icon={Beach} title="Beach" size="auto" /></h4>\n'),Object(o.mdx)("h2",null,"SVG Icons"),Object(o.mdx)("p",null,Object(o.mdx)("em",{parentName:"p"},"Scalable Vector Graphics")," can be set up to be scaleable and actually respond to the ",Object(o.mdx)("inlineCode",{parentName:"p"},"font-size"),"."),Object(o.mdx)(a.a,{scope:{Beach:i.default},useRender:!0,mdxType:"ComponentBox"},'\nconst Responsive = styled.span`\n  svg {\n    font-size: inherit;\n    width: 1.5em;\n    height: 1.5em;\n  }\n`\n\nconst Svg = (props) => (<svg\n  width="16"\n  height="16"\n  viewBox="0 0 16 16"\n  fill="none"\n  xmlns="http://www.w3.org/2000/svg"\n  {...props}\n>\n  <path\n    fillRule="evenodd"\n    clipRule="evenodd"\n    d="M4.03 5.22a.75.75 0 0 0-1.06 1.06l4.5 4.5a.75.75 0 0 0 1.06 0l4.5-4.5a.75.75 0 0 0-1.06-1.06L8 9.19 4.03 5.22z"\n    fill="#000"\n  />\n</svg>)\n\nrender(<>\n  <p>\n    <Svg width="24" height="24" /> - has a fixed size\n  </p>\n  <p>\n    <Responsive><Svg /></Responsive> - is responsive\n  </p>\n  <p>\n    <span className="dnb-icon dnb-icon--medium">\n      <Svg />\n    </span> - uses <code>.dnb-icon</code>\n  </p>\n</>)\n'))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-uilib-usage-accessibility-icons-md-ab0c40e6f141d3bb29b4.js.map