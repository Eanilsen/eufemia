{"version":3,"sources":["webpack:///./src/pages/uilib/usage/best-practices/for-typography.md"],"names":["_frontmatter","title","menuTitle","draft","order","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_8__","_extends","mdxType","parentName","isMDXComponent"],"mappings":"izBAKO,IAAMA,EAAe,CAC1BC,MAAS,gCACTC,UAAa,iBACbC,OAAS,EACTC,MAAS,GAQLC,EAAc,CAClBL,gBAEIM,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,EAAAH,EAAA,gBACD,OAAOI,OAAAC,EAAA,IAAAD,CAACN,EAADQ,EAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EH,OAAAC,EAAA,IAAAD,CAAA,wBACAA,OAAAC,EAAA,IAAAD,CAAA,kCACAA,OAAAC,EAAA,IAAAD,CAAA,qCAAgCA,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,QAAhC,wIACAJ,OAAAC,EAAA,IAAAD,CAAA,yDAAoDA,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,WAApD,MAA8GJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,WAA9G,OAAyKJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,aAAzK,0DACAJ,OAAAC,EAAA,IAAAD,CAAA,kIACAA,OAAAC,EAAA,IAAAD,CAAA,uCAAkCA,OAAAC,EAAA,IAAAD,CAAA,UAAQI,WAAW,KAAnB,mBAAlC,KAA2FJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,QAA3F,gBAA4JJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,QAA5J,gBAA6NJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,QAA7N,eACAJ,OAAAC,EAAA,IAAAD,CAAA,iCACAA,OAAAC,EAAA,IAAAD,CAAA,2SAIJL,EAAWU,gBAAiB","file":"component---src-pages-uilib-usage-best-practices-for-typography-md-4b11d43c08c2f4151124.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Best Practices for typography\",\n  \"menuTitle\": \"for typography\",\n  \"draft\": false,\n  \"order\": 2\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Typography`}</h1>\n    <h3>{`Headings and styling`}</h3>\n    <p>{`Never use headings (like `}<inlineCode parentName=\"p\">{`<h3>`}</inlineCode>{`) for purely styling purposes. Headings have a defined purpose and place in a web document. Using them correctly benefits all users.`}</p>\n    <p>{`For styling purposes only, use these classes `}<inlineCode parentName=\"p\">{`.dnb-h1`}</inlineCode>{` , `}<inlineCode parentName=\"p\">{`.dnb-h2`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`.dnb-lead`}</inlineCode>{` or style your typography according to the prototypes.`}</p>\n    <p>{`Use headings where you think that someone with a screen reader would have the benefit of finding and reading a title.`}</p>\n    <p>{`Heading levels should only `}<strong parentName=\"p\">{`increase by one`}</strong>{`: `}<inlineCode parentName=\"p\">{`<h1>`}</inlineCode>{` followed by `}<inlineCode parentName=\"p\">{`<h2>`}</inlineCode>{` followed by `}<inlineCode parentName=\"p\">{`<h3>`}</inlineCode>{` and so on.`}</p>\n    <h2>{`Disable local fonts`}</h2>\n    <p>{`If you are actively developing, testing or measuring your web app, make sure you disable locally installed fonts which are being used as web fonts. this way you can ensure that the browser will not use these locally installed fonts and display the fonts the end user will actually see.`}</p>\n\n    </MDXLayout>;\n}\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}