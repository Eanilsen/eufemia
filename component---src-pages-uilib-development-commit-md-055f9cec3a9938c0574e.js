(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{1032:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return b}),t.d(n,"_frontmatter",function(){return f});t(14),t(15),t(18),t(19),t(21),t(13);var o=t(2),a=t(4),c=t.n(a),r=t(0);function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},c=Object.keys(e);for(o=0;o<c.length;o++)t=c[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)t=c[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}function s(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function p(e,n){return!n||"object"!==m(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,n){return(u=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var b=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=p(this,l(n).call(this,e))).layout=null,t}var t,a,m;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&u(e,n)}(n,c.a.Component),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.components;i(e,["components"]);return Object(o.c)(r.MDXTag,{name:"wrapper",components:n},Object(o.c)(r.MDXTag,{name:"h1",components:n},"Commit"),Object(o.c)(r.MDXTag,{name:"p",components:n},Object(o.c)(r.MDXTag,{name:"strong",components:n,parentName:"p"},"Make sure You follow ",Object(o.c)(r.MDXTag,{name:"a",components:n,parentName:"strong",props:{href:"https://semver.org"}},"Semantic Versioning"))),Object(o.c)(r.MDXTag,{name:"p",components:n},"Version numbers are handled automatically by using ",Object(o.c)(r.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/semantic-release/semantic-release#readme"}},"semantic-release"),"."),Object(o.c)(r.MDXTag,{name:"h2",components:n},"Commit Messages"),Object(o.c)(r.MDXTag,{name:"p",components:n},"Make sure to decorate Your ",Object(o.c)(r.MDXTag,{name:"strong",components:n,parentName:"p"},"commit messages")," with either ",Object(o.c)(r.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/semantic-release/semantic-release#commit-message-format"}},"commit message format")," or simply use the following three methods:"),Object(o.c)(r.MDXTag,{name:"ul",components:n},Object(o.c)(r.MDXTag,{name:"li",components:n,parentName:"ul"},Object(o.c)(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"fix: an example fix message")),Object(o.c)(r.MDXTag,{name:"li",components:n,parentName:"ul"},Object(o.c)(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"feat: this is a new feature")),Object(o.c)(r.MDXTag,{name:"li",components:n,parentName:"ul"},Object(o.c)(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"break: breaking change in API"))),Object(o.c)(r.MDXTag,{name:"p",components:n},"You can use these synonyms as well:"),Object(o.c)(r.MDXTag,{name:"ul",components:n},Object(o.c)(r.MDXTag,{name:"li",components:n,parentName:"ul"},Object(o.c)(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"patch: an example fix message")),Object(o.c)(r.MDXTag,{name:"li",components:n,parentName:"ul"},Object(o.c)(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"minor: this is a new feature")),Object(o.c)(r.MDXTag,{name:"li",components:n,parentName:"ul"},Object(o.c)(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"major: breaking change in API"))),Object(o.c)(r.MDXTag,{name:"p",components:n},"Read more about ",Object(o.c)(r.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/bahmutov/simple-commit-message"}},"simple-commit-message"),"."),Object(o.c)(r.MDXTag,{name:"h2",components:n},"Committing changes"),Object(o.c)(r.MDXTag,{name:"p",components:n},"During a commit (locally), your commit content (code) will be tested with both Static and Integration tests. You may run ",Object(o.c)(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"yarn test")," or ",Object(o.c)(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"yarn test:update")," before you try to commit. You may also write new tests for your code before committing."),Object(o.c)(r.MDXTag,{name:"p",components:n},"The Code Base is based on several Static Tests to help the code to be uniform:"),Object(o.c)(r.MDXTag,{name:"ul",components:n},Object(o.c)(r.MDXTag,{name:"li",components:n,parentName:"ul"},"Prettier"),Object(o.c)(r.MDXTag,{name:"li",components:n,parentName:"ul"},"ESLint"),Object(o.c)(r.MDXTag,{name:"li",components:n,parentName:"ul"},"StyleLint")),Object(o.c)(r.MDXTag,{name:"p",components:n},"You may consider to install plugins for your editor of choice - to visualize and run the code formatters and linters based on the given config files. This way you can immediately see how the code will and have to consist."))}}])&&s(t.prototype,a),m&&s(t,m),n}();b.isMDXComponent=!0;var f={title:"Commit",draft:!1,order:2}}}]);
//# sourceMappingURL=component---src-pages-uilib-development-commit-md-055f9cec3a9938c0574e.js.map