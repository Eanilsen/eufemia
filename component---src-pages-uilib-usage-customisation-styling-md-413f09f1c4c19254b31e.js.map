{"version":3,"sources":["webpack:///./src/pages/uilib/usage/customisation/styling.md"],"names":["_react","__webpack_require__","_tag","MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","_core","jsx","MDXTag","name","parentName","className","href","header","title","status","draft"],"mappings":"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","file":"component---src-pages-uilib-usage-customisation-styling-md-413f09f1c4c19254b31e.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" components={components}><MDXTag name=\"h1\" components={components}>{`Styling`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The CSS is a compiled and minified version. You find it here: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dnb-ui-lib/style/dnb-ui-lib.min.css`}</MDXTag></MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Apply the DNB Style`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`To use the default DNB style, You have to define a CSS class called: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dnb-style`}</MDXTag>{`\nYou could also set this class on the document body.`}</MDXTag>\n      {\n        /* prettier-ignore-start */\n      }\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-html\"\n        }}>{`<div class=\"dnb-style\">\n  <!-- The styled Content -->\n</div>\n`}</MDXTag></MDXTag>\n      {\n        /* prettier-ignore-end */\n      }\n      <MDXTag name=\"h3\" components={components}>{`The Reason`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The benefits of explicitly defining the style class `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dnb-style`}</MDXTag>{`, is that we then can use the components by their own, without effecting all the existing styled browser elements and tags. This gives use a kind of backwards compatibility.\nBut it makes it also more flexible, like if we only want to apply our DNB style to a certain area of our web application.`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`For Node based environments`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`To include the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dnb-ui-lib`}</MDXTag>{` styles (except patterns), do this:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-js\"\n        }}>{`// This also includes the default DNB UI Theme\nimport 'dnb-ui-lib/style'\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`If You want to import the styles of all components - `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`without`}</MDXTag>{` the default DNB UI Theme:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-js\"\n        }}>{`// No Theme is included\nimport 'dnb-ui-lib/style/components'\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`You may ant to import a theme as well:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-js\"\n        }}>{`// Default DNB UI Theme\nimport 'dnb-ui-lib/style/theme'\n\n// ... is equivalent to the default theme\nimport 'dnb-ui-lib/style/themes/ui'\n\n// ... or some other theme\nimport 'dnb-ui-lib/style/themes/[NAME].css'\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`You also can import a single style of a single component:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-js\"\n        }}>{`import 'dnb-ui-lib/components/button/style'\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`You may have a look at the guides about `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"/eufemia/quickguide-designer/colors/\"\n        }}>{`colors`}</MDXTag>{` and `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"/eufemia/quickguide-designer/fonts/#fonts-to-show-code\"\n        }}>{`fonts`}</MDXTag>{`.`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Fonts to show Code`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Code>`}</MDXTag>{` snippets shows best on a `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`Monotype`}</MDXTag>{` font. Developers will normally have installed some of these fonts on their devices. Example of CSS `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`font-family`}</MDXTag>{` usage:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-css\"\n        }}>{`font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier,\n  monospace;\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Read more about `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"/eufemia/quickguide-designer/fonts/\"\n        }}>{`fonts at DNB`}</MDXTag></MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Best Practice`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`To write more structured and uniform CSS code, stick with this approach to write the most influential and important properties first. Have simply a newline between the blocks respective groups.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Example of how to structure the DNB CSS`}</MDXTag></MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-css\"\n        }}>{`.my-selector {\n  /* 1. Layout */\n  position: relative;\n  z-index: 1;\n  display: block;\n\n  /* 2. Sizes & Spaces */\n  width: 0.5em;\n  height: 0.5em;\n  padding: 1em; /* Will be the same as our local font-size of 1.5rem */\n\n  /* 3. Font & Typography */\n  font-family: 'Fedra Sans Std';\n  font-size: 1.5rem;\n  color: var(--color-sea-green);\n\n  /* 4. Styling */\n  border: 1px solid var(--color-mint-green); /* Use Pixel for borders. They don't need to be dynamic */\n  opacity: 1;\n\n  /* 5. Animations */\n  transition: opacity 0.2s linear;\n}\n`}</MDXTag></MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {\n  \"header\": \"UI Library\",\n  \"title\": \"Styling\",\n  \"status\": \"wip\",\n  \"draft\": false\n};\n    "],"sourceRoot":""}