/*
* Input component
*
*/

:root {
  --input-font-size: 1rem;
  --input-font-size--medium: 1.5rem;
  --input-font-size--large: 2rem;
  --input-padding: 0 1rem;
  --input-padding--medium: 0 1rem;
  --input-padding--large: 0 1.5rem;
  --input-height: 2rem;
  --input-height--medium: 2.5rem;
  --input-height--large: 3rem;
  --input-border-radius: calc(var(--input-height) / 2);
  --input-border-radius--medium: calc(var(--input-height--medium) / 2);
  --input-border-radius--large: calc(var(--input-height--large) / 2);
  --input-border-width: 1px;
}

.dnb-input {
  display: flex;
  align-items: center;
  flex-flow: row wrap; // for wrapping form-status etc.
  width: 100%;

  font-size: var(--input-font-size);
  line-height: var(--input-height);

  &__shell {
    position: relative;

    display: flex;
    align-items: center;
    flex: 1;
  }

  &__input {
    outline: none;
    border: none;

    // +1px because of vertical center - no mather what border width we have
    transform: translateY(1px);
  }

  &__input[disabled] {
    user-select: none;
  }

  &__shell,
  &__input {
    height: var(--input-height);
    border-radius: var(--input-border-radius);
  }

  &__placeholder,
  &__input {
    width: 100%;
    padding: var(--input-padding);

    text-align: left;

    color: inherit;
    font-size: var(--input-font-size);
    background-color: transparent;
  }

  &__placeholder {
    pointer-events: none;

    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;
    height: 100%;
    overflow: hidden;

    // +1px because of the border width
    transform: translateY(calc(1px - var(--input-border-width)))
      translateX(1px);

    white-space: nowrap;
    text-overflow: ellipsis;
  }

  &__description {
    color: inherit;
    padding-left: 0.5rem;
  }

  &--medium {
    line-height: var(--input-height--medium);
    .dnb-input__shell,
    .dnb-input__input {
      height: var(--input-height--medium);
      border-radius: var(--input-border-radius--medium);
    }
    .dnb-input__placeholder,
    .dnb-input__input {
      padding: var(--input-padding--medium);
      font-size: var(--input-font-size--medium);
    }
  }
  &--large {
    line-height: var(--input-height--large);
    .dnb-input__shell,
    .dnb-input__input {
      height: var(--input-height--large);
      border-radius: var(--input-border-radius--large);
    }
    .dnb-input__placeholder,
    .dnb-input__input {
      padding: var(--input-padding--large);
      font-size: var(--input-font-size--large);
    }
  }

  &__align--right &__placeholder,
  &__align--right &__input {
    text-align: right;
  }

  // Hide placeholder when: 1. input has content or 2: input is in focus
  &__shell[data-has-content='true'] .dnb-input__placeholder,
  &__shell[data-has-content='true'][data-input-state='focus']
    .dnb-input__placeholder {
    display: none;
  }

  &__extra-information {
    flex: 1 100%;

    padding: 0.5rem 1.5rem;

    color: var(--color-black);
    font-size: var(--font-size-small); // 14px
    line-height: 1.25rem;
  }
  > .dnb-form-label ~ &__extra-information {
    padding: 0.5rem 0;
  }

  &__submit-button {
    position: relative;
    z-index: 2; // over placeholder
    transform: translateX(var(--input-border-width));
  }
  // no special style for search
  // &__input--search {
  // }

  > .dnb-form-label {
    margin-right: 1rem;
  }

  > .dnb-form-status {
    margin-left: 0.5rem;
  }
}

// The input[type='range'] is moved into the slider component style
// @import '../../slider/style/_range.scss';

// Additional resets - this is moved in here, we may have usage later again
// legend {
//   padding: 0;
//   display: table;
//   width: 100%;
// }
// fieldset {
//   border: 0;
//   padding: 0.01rem 0 0 0;
//   margin: 0;
//   min-width: 0;
// }
// body:not(:-moz-handler-blocked) fieldset {
//   display: table-cell;
// }
