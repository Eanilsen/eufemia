/*
* Input theme
*
*/

@import '../../../../style/themes/imports.scss';

:root {
  --input-text-color: var(--color-sea-green);
  --input-text-color--focus: var(--color-emerald-green);
  --input-text-color--active: var(--color-emerald-green);
  --input-text-color--disabled: var(--color-sea-green-alt-30);
  --input-background-color: var(--color-white);
  --input-background-color--focus: var(--color-white);
  --input-background-color--active: var(--color-white);
  --input-background-color--disabled: var(--color-mint-green-12);
  --input-border-color: var(--color-sea-green-alt);
  --input-border-color--focus: var(--color-emerald-green);
  --input-border-color--active: var(--color-sea-green-alt);
  --input-border-color--disabled: var(--color-sea-green-alt-30);
}

.dnb-input {
  color: var(--input-text-color);

  &__shell {
    background-color: var(--color-white);
    border: none;
    @include fakeBorder(
      var(--input-border-color),
      var(--input-border-width),
      inset
    );

    // Background color of input when it has content
    &[data-has-content='true'] {
      color: var(--input-text-color--active);
      @include fakeBorder(
        var(--input-border-color--active),
        var(--input-border-width),
        inset
      );
      background-color: var(--input-background-color--active);
    }

    &[data-input-state='disabled'] {
      color: var(--input-text-color--disabled);
      @include fakeBorder(
        var(--input-border-color--disabled),
        var(--input-border-width),
        inset
      );
      background-color: var(--input-background-color--disabled);
    }

    &:not([data-input-state='disabled']):hover,
    &[data-input-state='focus'] {
      color: var(--input-text-color--focus);
      background-color: var(--input-background-color--focus);
      @include fakeBorder(
        var(--input-border-color--focus),
        calc(var(--input-border-width) + 1px)
      );
    }
  }

  // with status_state = "error"
  &__status--error &__shell:not([data-input-state='focus']) {
    &,
    &:not([data-input-state='disabled']):hover {
      // In case we want to have a larger border size on the input
      @include fakeBorder(
        var(--color-cherry-red),
        calc(var(--input-border-width) + 1px)
      );
    }
  }

  ::selection {
    background-color: var(--color-mint-green);
    color: var(--input-text-color--focus);
    text-shadow: none;
  }

  // IE11 fallback - hide placeholder on focus
  &__input:not([disabled]):not([readonly]):focus
    ~ .dnb-input__placeholder {
    display: none;
  }

  // hide placeholder on focus
  &__shell[data-input-state='focus'][data-has-content='false']
    &__input:not([disabled]):not([readonly])
    .dnb-input__placeholder {
    display: none;
  }

  &__description {
    color: var(--input-text-color);
  }
}
