/*
* Button component
*
*/

:root {
  --button-font-size: var(--font-size-default);
  --button-font-size-small: var(--font-size-small);
  --button-width: 2.5rem;
  --button-height: 2.5rem;
  --button-width--small: 1.5rem;
  --button-height--small: 1.5rem;
  --button-width--medium: 2rem;
  --button-height--medium: 2rem;
  --button-width--large: 3rem;
  --button-height--large: 3rem;
  --button-icon-size: 1rem;
  --button-border-width: 1px;
  --button-border-width--hover: 3px;
  --button-border-radius: calc(var(--button-height) / 2);
  --button-border-radius--small: calc(var(--button-height--small) / 2);
  --button-border-radius--medium: calc(var(--button-height--medium) / 2);
  --button-border-radius--large: calc(var(--button-height--large) / 2);
}

.dnb-button {
  display: inline-flex;
  vertical-align: middle;
  align-content: center;
  align-items: center;
  justify-content: center;
  white-space: nowrap;

  cursor: pointer;

  width: var(--button-width);
  height: var(--button-height);
  padding: 0;

  border: var(--button-border-width) solid transparent;
  border-radius: var(--button-border-radius);

  font-size: var(--button-font-size);
  line-height: var(--button-height);
  text-decoration: none;

  &__icon {
    line-height: 0;
    &:not(.dnb-icon) svg:not([width]):not([height]) {
      width: var(--button-icon-size);
      height: var(--button-icon-size);
    }
  }
  &__text {
    color: inherit;

    // +1px because of the border width
    transform: translateY(var(--button-border-width));
  }

  // size small
  &--size-small {
    width: var(--button-width--small);
    height: var(--button-height--small);
    font-size: var(--button-font-size-small);
    line-height: var(--button-font-size-small);
    border-radius: var(--button-border-radius--small);
  }
  &--has-text#{&}--size-small {
    padding-left: 1rem;
    padding-right: 1rem;
  }
  &--has-text#{&}--icon-position-left#{&}--size-small {
    padding-left: 0.5rem;
  }
  &--has-text#{&}--icon-position-right#{&}--size-small {
    padding-right: 0.5rem;
  }

  // size medium
  &--size-medium {
    width: var(--button-width--medium);
    height: var(--button-height--medium);
    line-height: var(--button-height--medium);
    border-radius: var(--button-border-radius--medium);
  }
  &--has-text#{&}--size-medium {
    padding-left: 1rem;
    padding-right: 1rem;
  }
  &--has-text#{&}--icon-position-left#{&}--size-medium {
    padding-left: 0.5rem;
  }
  &--has-text#{&}--icon-position-right#{&}--size-medium {
    padding-right: 0.5rem;
  }

  // size large
  &--size-large {
    width: var(--button-width--large);
    height: var(--button-height--large);
    line-height: var(--button-height--large);
    border-radius: var(--button-border-radius--large);
  }
  &--has-text#{&}--size-large {
    padding-left: 2rem;
    padding-right: 2rem;
  }
  &--has-text#{&}--icon-position-left#{&}--size-large {
    padding-left: 1rem;
  }
  &--has-text#{&}--icon-position-right#{&}--size-large {
    padding-right: 1rem;
  }

  // size default
  &--has-text {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    width: auto;
  }
  &--has-text &__icon {
    margin: 0 0.5rem;
    margin: 0 calc(var(--button-icon-size) / 2);
  }
  // &--has-text#{&}--size-large &__icon {
  //   margin: 0 var(--button-icon-size);
  // }
  &--has-text#{&}--icon-position-left {
    padding-left: 0.5rem;
  }
  &--has-text#{&}--icon-position-right {
    padding-right: 0.5rem;
  }

  // Default -- icon set to right side
  &--has-text#{&}--has-icon {
    .dnb-button__icon {
      order: 2;
    }
    .dnb-button__text {
      order: 1;
    }
  }

  // Button with icon and text - icon on LEFT side
  &--has-text#{&}--has-icon#{&}--icon-position-left {
    .dnb-button__icon {
      order: 1;
    }
    .dnb-button__text {
      order: 2;
    }
  }

  &--reset {
    margin: 0;
    padding: 0;
    width: auto;
    height: auto;
    overflow: visible;

    border: none;
    border-radius: 0;
    background-color: transparent;
    appearance: none;
    box-shadow: none;

    color: inherit;
    font: inherit;
    text-align: inherit;
    line-height: inherit;

    @include hover(true) {
      box-shadow: none;
      border: none;
    }

    &:not([disabled]):focus,
    &:not([disabled]):active {
      @include fakeFocus();
    }

    html[data-whatinput='mouse'] &:not([disabled]):focus,
    html[data-whatinput='mouse'] &:not([disabled]):active {
      box-shadow: none;
      color: inherit;
      border: none;
    }
  }

  // reset
  &[type='button'] {
    appearance: none;
  }

  /* Firefox includes a hidden border which messes up button dimensions */
  @at-root button#{&}::-moz-focus-inner & {
    border: none;
  }
}

// make sure we style an Anchor like a button
a.dnb-button {
  transition: none;
}
