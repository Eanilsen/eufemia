/*
* Dropdown component
*
*/

:root {
  // --dropdown--maxwidth will be used by a max-width
  --dropdown-width: 16rem;
  --dropdown-min-width: 10rem;
  --dropdown-max-width: 20rem;
  --dropdown-height: 2rem;
  --dropdown-padding-horizontal: 1rem;
  --dropdown-border-width: 0.0625rem;
  --dropdown-text-padding: 0.5rem;
  --dropdown-border-radius: calc(var(--dropdown-height) / 2);
}

@mixin openDropdown($state: 'animation') {
  z-index: 9;
  display: flex;

  animation: dropdownSlideDown 200ms ease-out 1 forwards;
  &--no-animation {
    animation: dropdownSlideDown 1ms ease-out 1 forwards;
  }
}
@mixin closeDropdown($state: 'animation') {
  animation: dropdownSlideUp 150ms ease-out 1 forwards;
  &--no-animation {
    animation: dropdownSlideUp 1ms ease-out 1 forwards;
  }
}
@mixin dropdownClosed() {
  display: none;
}
@keyframes dropdownSlideDown {
  from {
    opacity: 0;
    transform: translateY(0);
  }
  to {
    opacity: 1;
    transform: translateY(calc(var(--dropdown-height) + 1px));
  }
}

@keyframes dropdownSlideUp {
  from {
    opacity: 1;
    transform: translateY(var(--dropdown-height));
  }
  to {
    opacity: 0;
    transform: translateY(0);
  }
}

.dnb-dropdown {
  display: inline-flex;
  flex-direction: column;
  align-items: flex-start;
  vertical-align: middle;

  margin: 0;
  padding: 0;

  width: auto;

  font-size: var(--font-size-default);
  font-weight: var(--font-weight-default);

  color: inherit;

  &__shell {
    position: relative;

    // do not use transform: translateY because of z-indexÂ¨
    // we use therefore top
    top: -0.0625rem;

    height: var(--dropdown-height);

    margin: 0;
    padding: 0;

    color: inherit;
  }
  label + &[class*='__form-status'] {
    vertical-align: top;
    .dnb-dropdown__shell {
      top: -0.375rem;
    }
  }

  // ul element
  &__options {
    @at-root .dnb-spacing & li {
      margin: 0;
    }

    position: absolute;
    z-index: 3;
    top: 0;
    right: 0;

    display: flex;
    flex-direction: column;

    width: 100%;
    margin: 0;
    padding: 0;

    list-style: none;
    background-color: transparent;

    transform: translateY(0);
    transition: transform 200ms, opacity 160ms ease-out;
  }

  // li element
  &__option {
    position: relative;

    cursor: pointer;

    margin: 0;
    padding: 2px; // to make space for the fakeFocus
    color: inherit;

    background-color: var(--color-white);

    &__inner {
      position: relative;
      z-index: 1; // only to go over &__triangle

      display: block;

      outline: none;

      width: 100%;
      margin: 0;
      padding: 1rem;

      color: inherit;
      background-color: var(--color-white);

      @include hover() {
        background-color: grey;
      }
    }

    &__item {
      display: block;
      overflow: hidden;
      text-overflow: ellipsis;
      width: 100%;
    }

    @include hover() {
      background-color: grey;
      .dnb-dropdown__option__inner {
        background-color: grey;
      }
    }

    // for keyboard usage
    &--active {
      background-color: grey;
      .dnb-dropdown__option__inner {
        @include fakeBorder();
      }
    }

    &--selected {
      background-color: grey;
      .dnb-dropdown__option__inner {
        background-color: grey;
      }
    }
  }

  &__icon {
    position: relative;
    order: 2;

    pointer-events: none;
    color: inherit;

    .dnb-icon {
      color: inherit;
    }
  }

  &__triangle {
    position: absolute;
    top: calc(2px - var(--dropdown-height) / 2);
    left: auto;
    right: 0;
    margin: 0
      calc(
        var(--dropdown-padding-horizontal) + var(--dropdown-border-width)
      );

    width: calc(var(--dropdown-height) / 2);
    height: calc(var(--dropdown-height) / 2);

    overflow: hidden;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;

      width: calc(var(--dropdown-height) / 2);
      height: calc(var(--dropdown-height) / 2);
      transform: translateY(60%) rotate(45deg);

      border: 1px solid var(--color-black-border);
      background-color: var(--color-white);
    }
  }
  &--icon-position-left &__triangle {
    left: 0;
    right: auto;
  }

  // button
  &__trigger {
    position: relative;
    z-index: 1;

    user-select: none;

    display: inline-flex;
    outline: none;

    width: 100%;
    height: var(--dropdown-height);
    padding: 0 var(--dropdown-padding-horizontal);

    font-size: inherit;
    color: inherit;
    line-height: var(--dropdown-height);
    border: var(--dropdown-border-width) solid transparent;

    border-radius: var(--dropdown-border-radius);
  }
  &__text {
    order: 1;
    position: relative;
    z-index: 4;

    height: inherit;

    padding: 0 var(--dropdown-text-padding) 0 0;

    overflow: hidden;

    color: inherit;
    text-align: left;
    text-overflow: ellipsis;

    &__inner {
      display: inline-block;

      // min-width: calc(
      //   var(--dropdown-min-width) -
      //     calc(var(--dropdown-padding-horizontal) * 3 + 10px)
      // );
      // max-width: calc(
      //   var(--dropdown-max-width) -
      //     calc(var(--dropdown-padding-horizontal) * 3 + 10px)
      // );
      width: calc(
        var(--dropdown-width) -
          calc(var(--dropdown-padding-horizontal) * 3 + 10px)
      );

      height: inherit;
      padding: 0;

      overflow: hidden;
      white-space: nowrap;

      color: inherit;
      text-decoration: none;
      text-overflow: inherit;
      text-align: inherit;
    }
  }

  &--opened &__options {
    @include openDropdown();
  }
  &--hidden &__options {
    @include dropdownClosed();
  }
  &:not(.dnb-dropdown--opened) &__options {
    @include closeDropdown();
  }

  &--icon-position-left {
    .dnb-dropdown__icon {
      order: 1;
      margin-top: -1px;
    }
    .dnb-dropdown__text {
      order: 2;
      padding-right: 0;
      padding-left: var(--dropdown-text-padding);
    }
  }

  // input element
  &__input {
    position: absolute;
    z-index: 6;
    top: 0;
    left: 0;

    cursor: pointer;
    display: block;

    width: 100%;
    height: var(--dropdown-height);

    opacity: 0;

    @include hover() {
      & ~ .dnb-dropdown__trigger .dnb-dropdown__text,
      & ~ .dnb-dropdown__trigger .dnb-dropdown__icon .dnb-icon {
        color: black;
      }
    }

    @include focus() {
      & ~ .dnb-dropdown__trigger {
        z-index: 8; // make the trigger to the foreground, so we can watch the click to reset
        cursor: pointer;
        @include fakeBorder();
      }
      & ~ .dnb-dropdown__options {
        @include openDropdown();
      }
      // & ~ ul li .dnb-dropdown__triangle {
      //   transition: opacity 200ms ease-out 50ms;
      //   opacity: 1;
      //   visibility: visible;
      // }
    }
  }

  &__input[disabled] ~ &__icon,
  &__input[disabled] ~ &__trigger {
    color: lightgrey;
  }

  &__outside-value {
    display: block;
    padding: 0.5rem 0 1rem var(--dropdown-padding-horizontal);
  }

  > .dnb-form-label {
    margin-right: 1rem;
  }

  > .dnb-form-status {
    margin-top: 0.5rem;
  }

  .icon-chevron-left .dnb-icon {
    svg {
      transform: rotate(-90deg);
    }
  }
}
