{"version":3,"sources":["webpack:///./src/pages/uilib/typography.md"],"names":["_frontmatter","title","icon","draft","order","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_8__","_extends","mdxType","parentName","href","Tags_ComponentBox__WEBPACK_IMPORTED_MODULE_10__","hideOnTest","caption","Tags_CodeBlock__WEBPACK_IMPORTED_MODULE_9__","reactLive","hideCode","data-dnb-test","className","isMDXComponent"],"mappings":"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","file":"component---src-pages-uilib-typography-md-a8910e22bc31fb37cde9.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport CodeBlock from 'Tags/CodeBlock';\nimport ComponentBox from 'Tags/ComponentBox';\nexport const _frontmatter = {\n  \"title\": \"Typography\",\n  \"icon\": \"typography\",\n  \"draft\": false,\n  \"order\": 5\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Typography`}</h1>\n    <p>{`Fonts are handled automatically once the CSS packages `}<strong parentName=\"p\">{`dnb-ui-core`}</strong>{` or `}<strong parentName=\"p\">{`dnb-ui-basis`}</strong>{` are loaded.`}</p>\n    <p>{`Every typography HTML element, like headings and paragraphs, have a defined `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{`, respective `}<inlineCode parentName=\"p\">{`line-height`}</inlineCode>{` so everything falls exactly into the `}<strong parentName=\"p\">{`8 pixel grid`}</strong>{`.`}</p>\n    <p>{`You don't need to define the `}<inlineCode parentName=\"p\">{`font-family`}</inlineCode>{` ever, but rather use CSS Custom Properties for `}<inlineCode parentName=\"p\">{`font-weight`}</inlineCode>{`.`}</p>\n    <p>{`Read more how to use the `}<a parentName=\"p\" {...{\n        \"href\": \"/uilib/typography/font-weights/\"\n      }}>{`different weights`}</a>{`.`}</p>\n    <h2>{`Font Face`}</h2>\n    <p>{`The DNB default Font Family is `}<inlineCode parentName=\"p\">{`Fedra Sans Std`}</inlineCode>{`. This font, together with it's weights is loaded and imported with `}<inlineCode parentName=\"p\">{`@font-face`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`/css/core/fonts.scss`}</inlineCode>{`. The font family is included in the library package.`}</p>\n    <h2>{`Headings`}</h2>\n    <p>{`The DNB UX team has currently only defined tree levels of heading styles (h1, h2 and h3). But level 4, 5 and 6 are also supported by the `}<inlineCode parentName=\"p\">{`dnb-ui-lib`}</inlineCode>{`.`}</p>\n    <p>{`If you wish to have a header `}<strong parentName=\"p\">{`look like`}</strong>{` a heading, you can use these classes:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.dnb-h1`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.dnb-h1--small`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.dnb-h2`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.dnb-lead`}</inlineCode>{` (h3)`}</li>\n    </ul>\n    <p>{`Read more about `}<a parentName=\"p\" {...{\n        \"href\": \"/uilib/usage/best-practices/for-typography\"\n      }}>{`best practices for typography`}</a>{`.`}</p>\n    <h3>{`Headings in React`}</h3>\n    <ComponentBox hideOnTest caption=\"Default Heading typography using React JSX\" mdxType=\"ComponentBox\">\n      {`\n<H1 style_type=\"small\">H1 small</H1>\n<H1>H1</H1>\n<H2>H2</H2>\n<Lead>Lead</Lead>\n`}\n    </ComponentBox>\n    <h3>{`Headings with vanilla HTML`}</h3>\n    <CodeBlock reactLive hideCode caption=\"Default Heading typography\" mdxType=\"CodeBlock\">\n      {`\n<h1 class=\"dnb-h1\">H1</h1>\n<h2 class=\"dnb-h2\">H2</h2>\n<h3 class=\"dnb-lead\">Lead</h3>\n`}\n    </CodeBlock>\n    <CodeBlock reactLive hideCode data-dnb-test=\"heading-additional\" caption=\"Additional Heading typography\" mdxType=\"CodeBlock\">\n      {`\n<article>\n  <h1 class=\"dnb-h1\">\n    <small>Small H1</small> Normal H1\n  </h1>\n  <h1 class=\"dnb-h1 dnb-h1--small\">Small H1 with class</h1>\n  <h2 class=\"dnb-h2\">\n    Normal H2 <small>Small H2</small>\n  </h2>\n  <h3 class=\"dnb-lead\">\n    Normal H3/Lead <small>Small H3/Lead</small>\n  </h3>\n</article>\n`}\n    </CodeBlock>\n    <h3>{`Paragraph`}</h3>\n    <p>{`Paragraph comes in several variants. You can use these classes:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.dnb-p`}</inlineCode>{` (Body)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.dnb-p--demi`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.dnb-p--medium`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.dnb-p--ingress`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.dnb-p--small`}</inlineCode></li>\n    </ul>\n    <h3>{`Paragraphs in React`}</h3>\n  <ComponentBox hideOnTest caption=\"Default paragraph typography using React JSX\" mdxType=\"ComponentBox\">\n  {`\n  <P>Paragraph (Body)</P>\n  <P style_type=\"demi\">Paragraph Demi</P>\n  <P style_type=\"medium\">Paragraph Medium</P>\n  <P style_type=\"ingress\">Paragraph Ingress</P>\n  <P style_type=\"small\">Paragraph Small</P>\n  <P style_type=\"small demi\">Paragraph Demi Small</P>\n  <P style_type=\"small medium\">Paragraph Medium Small</P>\n  `}\n  </ComponentBox>\n    <h3>{`Paragraphs with vanilla HTML`}</h3>\n    <CodeBlock reactLive hideCode data-dnb-test=\"paragraph-default\" caption=\"Default Paragraph styles\" mdxType=\"CodeBlock\">\n      {`\n<p class=\"dnb-p\">\n  Here is a paragraph text<br />\n  <a href=\"/\" class=\"dnb-anchor\">Anchor / Text Link</a><br />\n  <b>Bold paragraph</b><br />\n  <strong>Strong paragraph</strong><br />\n  <i>Italic paragraph</i><br />\n  <u>Underline paragraph</u><br />\n  Numbers 0123456789<br />\n  <code class=\"dnb-code\">Code paragraph</code><br />\n  <cite>Cite paragraph</cite><br />\n</p>\n`}\n    </CodeBlock>\n    <CodeBlock reactLive hideCode data-dnb-test=\"paragraph-small\" caption=\"Paragraph with small font-size\" mdxType=\"CodeBlock\">\n      {`\n<p class=\"dnb-p dnb-p--small\">\n  Here is a small paragraph text<br />\n  <a href=\"/\" class=\"dnb-anchor\">Anchor / Text Link</a><br />\n  <b>Bold paragraph</b><br />\n  <strong>Strong paragraph</strong><br />\n  <i>Italic paragraph</i><br />\n  <u>Underline paragraph</u><br />\n  Numbers 0123456789<br />\n  <code class=\"dnb-code\">Code paragraph</code><br />\n  <cite>Cite paragraph</cite><br />\n</p>\n`}\n    </CodeBlock>\n    <CodeBlock reactLive hideCode data-dnb-test=\"paragraph-additional\" caption=\"Additional Paragraph formatting (not defined yet)\" mdxType=\"CodeBlock\">\n      {`\n<p class=\"dnb-p\">\n  <del>Deleted paragraph</del><br />\n  <mark>Marked paragraph</mark><br />\n  <ins>Inserted paragraph</ins><br />\n  <sub>Subscript paragraph</sub><br />\n  <sup>Superscript paragraph</sup><br />\n</p>\n`}\n    </CodeBlock>\n    <p>{`Read more `}<a parentName=\"p\" {...{\n        \"href\": \"/quickguide-designer/fonts/\"\n      }}>{`about Fonts in the Designer Guides`}</a></p>\n    <h2>{`Anchor`}</h2>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.dnb-anchor`}</inlineCode>{` `}<a href=\"/\" className=\"dnb-anchor\">{`Anchor with default style`}</a></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.dnb-anchor--hover`}</inlineCode>{` `}<a href=\"/\" className=\"dnb-anchor dnb-anchor--hover\">{`Hover Style`}</a></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.dnb-anchor--active`}</inlineCode>{` `}<a href=\"/\" className=\"dnb-anchor dnb-anchor--active\">{`Active Style`}</a></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.dnb-anchor--focus`}</inlineCode>{` `}<a href=\"/\" className=\"dnb-anchor dnb-anchor--focus\">{`Focus Style`}</a></li>\n    </ul>\n    <p>{`Read more about the `}<a parentName=\"p\" {...{\n        \"href\": \"/uilib/elements/anchor\"\n      }}>{`Anchor / Text Link`}</a></p>\n\n    </MDXLayout>;\n}\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}