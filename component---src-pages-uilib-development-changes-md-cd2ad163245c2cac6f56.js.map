{"version":3,"sources":["webpack:///./src/pages/uilib/development/changes.md"],"names":["_frontmatter","title","draft","order","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_8__","_extends","mdxType","parentName","className","isMDXComponent"],"mappings":"gzBAKO,IAAMA,EAAe,CAC1BC,MAAS,eACTC,OAAS,EACTC,MAAS,GAQLC,EAAc,CAClBJ,gBAEIK,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,EAAAH,EAAA,gBACD,OAAOI,OAAAC,EAAA,IAAAD,CAACN,EAADQ,EAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EH,OAAAC,EAAA,IAAAD,CAAA,4BACAA,OAAAC,EAAA,IAAAD,CAAA,+DACAA,OAAAC,EAAA,IAAAD,CAAA,wBAAmBA,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,cAAnB,gCAA0GJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,mBAA1G,OAA6KJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,iBAA7K,uHAA8VJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,KAAf,cAA9V,QAA6YJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,KAAf,YAA7Y,gBACAJ,OAAAC,EAAA,IAAAD,CAAA,6BAAwBA,OAAAC,EAAA,IAAAD,CAAA,UAAQI,WAAW,KAAnB,eAAxB,oGAA4KJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,cAA5K,WACAJ,OAAAC,EAAA,IAAAD,CAAA,0EAAqEA,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,aAArE,0DACAJ,OAAAC,EAAA,IAAAD,CAAA,gEAA2DA,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,cAA3D,SAA2HJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,cAA3H,yBACAJ,OAAAC,EAAA,IAAAD,CAAA,6GAAwGA,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,kBAAxG,YACAJ,OAAAC,EAAA,IAAAD,CAAA,WAAKA,OAAAC,EAAA,IAAAD,CAAA,OAAAE,EAAA,CAAME,WAAW,OAAU,CAC5BC,UAAa,kBADZ,yIAQLL,OAAAC,EAAA,IAAAD,CAAA,qCAAgCA,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,MAAvB,cAAhC,KACAJ,OAAAC,EAAA,IAAAD,CAAA,gEACAA,OAAAC,EAAA,IAAAD,CAAA,UACEA,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,gCACAJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,yDACAJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,2BACAJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,8CACAJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,sBACAJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,gCAEFJ,OAAAC,EAAA,IAAAD,CAAA,+DAA0DA,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,cAA1D,4FAIJT,EAAWW,gBAAiB","file":"component---src-pages-uilib-development-changes-md-cd2ad163245c2cac6f56.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Make Changes\",\n  \"draft\": false,\n  \"order\": 1\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Making changes`}</h1>\n    <h2>{`Get started on making new Components and Patterns`}</h2>\n    <p>{`In the repo `}<inlineCode parentName=\"p\">{`dnb-ui-lib`}</inlineCode>{` you will find the directory `}<inlineCode parentName=\"p\">{`/src/components`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`/src/patterns`}</inlineCode>{`. There you can place a new directory with all the necessary sub folders. As a reference, take a look how the other `}<em parentName=\"p\">{`components`}</em>{` and `}<em parentName=\"p\">{`patterns`}</em>{` are set up.`}</p>\n    <p>{`Next, we need to `}<strong parentName=\"p\">{`pre-publish`}</strong>{` the library locally, so we can check the building process and test our changes locally by using `}<inlineCode parentName=\"p\">{`yarn build`}</inlineCode>{` again.`}</p>\n    <p>{`To use the local build, you can either run the portal, or use `}<inlineCode parentName=\"p\">{`yarn link`}</inlineCode>{` to link the package with a totally different project.`}</p>\n    <p>{`As well as that, you can also use Storybook. Inside `}<inlineCode parentName=\"p\">{`dnb-ui-lib`}</inlineCode>{`, run `}<inlineCode parentName=\"p\">{`yarn story`}</inlineCode>{` to start the server.`}</p>\n    <p>{`It is recommended that you make a new branch to isolate your work before it gets merged into the `}<inlineCode parentName=\"p\">{`origin/develop`}</inlineCode>{` branch.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# Make a Feature branch\n$ git checkout -b ftr/my-feature\n\n# - or a Work In Progress branch\n$ git checkout -b wip/working-on-it\n`}</code></pre>\n    <h3>{`What happens on calling `}<inlineCode parentName=\"h3\">{`yarn build`}</inlineCode>{`?`}</h3>\n    <p>{`There are a lot of different things going on, like:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Assets are getting generated`}</li>\n      <li parentName=\"ul\">{`All the lib code gets compiled down to ECMAScript 5.1`}</li>\n      <li parentName=\"ul\">{`UMD bundle gets created`}</li>\n      <li parentName=\"ul\">{`All SASS styles are validated and compiled`}</li>\n      <li parentName=\"ul\">{`Code gets minified`}</li>\n      <li parentName=\"ul\">{`Icons are getting converted`}</li>\n    </ul>\n    <p>{`A couple of folders and files are generated in the `}<inlineCode parentName=\"p\">{`dnb-ui-lib`}</inlineCode>{` root. They are ignored in the .gitignore file, so they not get a part of the git repo.`}</p>\n\n    </MDXLayout>;\n}\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}