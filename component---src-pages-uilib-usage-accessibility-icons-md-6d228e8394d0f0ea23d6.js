(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{1188:function(n,e,o){"use strict";o.r(e),o.d(e,"default",function(){return O}),o.d(e,"_frontmatter",function(){return D});var t=o(22),a=o.n(t),s=o(12),c=o.n(s),i=o(10),p=o.n(i),r=o(13),d=o.n(r),m=o(11),h=o.n(m),l=o(14),u=o.n(l),b=o(2),g=o(4),v=o.n(g),f=o(0),M=o(20),j=o(262),O=function(n){function e(n){var o;return c()(this,e),(o=d()(this,h()(e).call(this,n))).layout=null,o}return u()(e,n),p()(e,[{key:"render",value:function(){var n=this.props,e=n.components;a()(n,["components"]);return Object(b.d)(f.MDXTag,{name:"wrapper",components:e},Object(b.d)(f.MDXTag,{name:"h1",components:e},"Accessibility of Icons"),Object(b.d)(f.MDXTag,{name:"p",components:e},"By using inline SVG, we have the possibility to make graphical assets both ",Object(b.d)(f.MDXTag,{name:"strong",components:e,parentName:"p"},"responsive")," and ",Object(b.d)(f.MDXTag,{name:"strong",components:e,parentName:"p"},"interactive"),". In order to do so, use the ",Object(b.d)(f.MDXTag,{name:"a",components:e,parentName:"p",props:{href:"/uilib/components/icon"}},"Icon")," or ",Object(b.d)(f.MDXTag,{name:"a",components:e,parentName:"p",props:{href:"/uilib/components/icon-primary"}},"IconPrimary")," component. These components provide the needed runtime processing."),Object(b.d)(f.MDXTag,{name:"h2",components:e},"Decorative Icons"),Object(b.d)(f.MDXTag,{name:"p",components:e},"If your icons are purely ",Object(b.d)(f.MDXTag,{name:"strong",components:e,parentName:"p"},"decorative"),", youâ€™ll need to manually add an ",Object(b.d)(f.MDXTag,{name:"strong",components:e,parentName:"p"},"aria-hidden")," (results in ",Object(b.d)(f.MDXTag,{name:"inlineCode",components:e,parentName:"p"},'aria-hidden="true"'),') attribute to each of your icons so your app is "accessible".'),Object(b.d)(M.a,{scope:{Beach:j.default}},'\n<Icon icon={Beach} size="64" title="Beach" aria-hidden />\n'),Object(b.d)(f.MDXTag,{name:"h2",components:e},"Responsive Icons"),Object(b.d)(f.MDXTag,{name:"p",components:e},"Use ",Object(b.d)(f.MDXTag,{name:"inlineCode",components:e,parentName:"p"},'size="auto"')," to force the icon to inherit the size of its parent element."),Object(b.d)(M.a,{scope:{Beach:j.default}},'\n<h1>My H1 with an icon <Icon icon={Beach} title="Beach" size="auto" /></h1>\n<h4>My H4 with the same icon <Icon icon={Beach} title="Beach" size="auto" /></h4>\n'),Object(b.d)(f.MDXTag,{name:"h2",components:e},"SVG Icons"),Object(b.d)(f.MDXTag,{name:"p",components:e},Object(b.d)(f.MDXTag,{name:"em",components:e,parentName:"p"},"Scalable Vector Graphics")," can be set up to be scaleable and actually respond to the ",Object(b.d)(f.MDXTag,{name:"inlineCode",components:e,parentName:"p"},"font-size"),"."),Object(b.d)(M.a,{scope:{Beach:j.default},useRender:!0},'\nconst Responsive = styled.span`\n  svg {\n    font-size: inherit;\n    width: 1.5em;\n    height: 1.5em;\n  }\n`\n\nconst Svg = (props) => (<svg\n  width="16"\n  height="16"\n  viewBox="0 0 16 16"\n  fill="none"\n  xmlns="http://www.w3.org/2000/svg"\n  {...props}\n>\n  <path\n    fillRule="evenodd"\n    clipRule="evenodd"\n    d="M4.03 5.22a.75.75 0 0 0-1.06 1.06l4.5 4.5a.75.75 0 0 0 1.06 0l4.5-4.5a.75.75 0 0 0-1.06-1.06L8 9.19 4.03 5.22z"\n    fill="#000"\n  />\n</svg>)\n\nrender(<>\n  <p>\n    <Svg width="24" height="24" /> - has a fixed size\n  </p>\n  <p>\n    <Responsive><Svg /></Responsive> - is responsive\n  </p>\n  <p>\n    <span className="dnb-icon dnb-icon--medium">\n      <Svg />\n    </span> - uses <code>.dnb-icon</code>\n  </p>\n</>)\n'))}}]),e}(v.a.Component);O.isMDXComponent=!0;var D={title:"Icon",draft:!1}}}]);
//# sourceMappingURL=component---src-pages-uilib-usage-accessibility-icons-md-6d228e8394d0f0ea23d6.js.map