{"version":3,"sources":["webpack:///./src/pages/uilib/typography.md"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_6__","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_8__","name","parentName","href","Tags_CodeBlock__WEBPACK_IMPORTED_MODULE_9__","reactLive","hideCode","isMDXComponent","_frontmatter","title","icon","draft","order"],"mappings":"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","file":"component---src-pages-uilib-typography-md-9a06352ec8058901eee3.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport CodeBlock from 'Tags/CodeBlock';\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" components={components}>\n      <MDXTag name=\"h1\" components={components}>{`Typography`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Font Face`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The DNB default Font Family is `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Fedra Sans Std`}</MDXTag>{`. This font, together with its weights is loaded and imported with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`@font-face`}</MDXTag>{` in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/css/core/fonts.scss`}</MDXTag>{`. The font is included in the library package.\nTo make sure You don't load all of the font faces at once, You apply a font `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`weights`}</MDXTag>{` to load the predefined font faces.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Read more how to use the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"/uilib/typography/font-weights/\"\n        }}>{`different weights`}</MDXTag>{`.`}</MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`Headings`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`DNB UX Team has currently only defined tree levels of heading styles (h1, h2 and h3). But level 4, 5 and 6 is also supported by the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dnb-ui-lib`}</MDXTag>{`.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`In case You want to have a header look like a heading, You can use these classes:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`.dnb-h1`}</MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`.dnb-h2`}</MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`.dnb-lead`}</MDXTag></MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Read more about `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"/uilib/usage/best-practices/for-typography\"\n        }}>{`best practices for typography`}</MDXTag>{`.`}</MDXTag>\n      <MDXTag name=\"h4\" components={components}>{`Heading examples`}</MDXTag>\n      <CodeBlock reactLive hideCode>\n        {`\n<h1 className=\"dnb-h1\">H1</h1>\n<h2 className=\"dnb-h2\">H2</h2>\n<h3 className=\"dnb-h3\">H3</h3>\n<h4 className=\"dnb-h4\">H4</h4>\n<h5 className=\"dnb-h5\">H5</h5>\n<h6 className=\"dnb-h6\">H6</h6>\n`}\n      </CodeBlock>\n      <MDXTag name=\"h3\" components={components}>{`Paragraph`}</MDXTag>\n      <CodeBlock reactLive hideCode>\n        {`\n<p>\n  Here is a paragraph with some nonsense <a href=\"/\" className=\"dnb-anchor\">Lorem Ipsum</a> comes from <b>sections</b> 1.10.32 and 1.10.33 of \"de <i>Finibus Bonorum</i> et <u>Malorum</u>\" (<strong>The Extremes</strong> of Good and Evil) by Cicero, written in 45 BC.\n</p>\n`}\n      </CodeBlock>\n      <MDXTag name=\"p\" components={components}>{`Read more `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"/quickguide-designer/fonts/\"\n        }}>{`about Fonts in the Designer Guides`}</MDXTag>{`.`}</MDXTag>\n           </MDXTag>;\n  }\n\n}\nMDXContent.isMDXComponent = true;\nexport const _frontmatter = {\n  \"title\": \"Typography\",\n  \"icon\": \"typography\",\n  \"draft\": false,\n  \"order\": 4\n};\n    "],"sourceRoot":""}