{"version":3,"sources":["webpack:///./src/pages/uilib/usage/customisation/component-properties.md"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_6__","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_8__","name","parentName","href","Tags_ComponentBox__WEBPACK_IMPORTED_MODULE_10__","scope","hamburgerIcon","useRender","isMDXComponent","_frontmatter","title","draft","order"],"mappings":"k7CAQqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,wPADmBO,IAAMC,kDAMnC,IAAAC,EAIHP,KAAKH,MAFPW,EAFKD,EAELC,WAFKC,EAAAF,EAAA,gBAKP,OAAOG,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,UAAUL,WAAYA,GACxCE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,GAA9B,wBACAE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAA7B,SAAmDE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,EAAYM,WAAW,IAAIjB,MAAO,CAC9GkB,KAAQ,sBADuC,aAAnD,gBAE4CL,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,aAAaL,WAAYA,EAAYM,WAAW,KAA7D,cAF5C,2IAEgRJ,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,EAAYM,WAAW,IAAIjB,MAAO,CAC3UkB,KAAQ,kCADoQ,qBAFhR,KAKAL,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAA7B,gFACAE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,GAA9B,yBACAE,OAAAC,EAAA,EAAAD,CAACM,EAAA,EAAD,oMAeAN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,GAA9B,oBACAE,OAAAC,EAAA,EAAAD,CAACM,EAAA,EAAD,CAAcC,MAAO,CACnBC,2BACCC,WAAS,GAFZ,miBAkCAT,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,GAA9B,iCACAE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,aAAaL,WAAYA,GACpCE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,EAAYM,WAAW,cAApD,iDAEFJ,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAA7B,wBAAkEE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,aAAaL,WAAYA,EAAYM,WAAW,KAA7D,SAAlE,qDAA2MJ,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,aAAaL,WAAYA,EAAYM,WAAW,KAA7D,cAA3M,2BAA+TJ,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,aAAaL,WAAYA,EAAYM,WAAW,KAA7D,QAA/T,gLAGAJ,OAAAC,EAAA,EAAAD,CAACM,EAAA,EAAD,CAAcG,WAAS,GAAvB,uhBA2BNvB,EAAWwB,gBAAiB,EACrB,IAAMC,EAAe,CAC1BC,MAAS,uBACTC,OAAS,EACTC,MAAS","file":"component---src-pages-uilib-usage-customisation-component-properties-md-34f9f4c7f1bdad881b9a.js","sourcesContent":["import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n\n\n  import 'dnb-ui-lib/src/web-components';\nimport ComponentBox from 'Tags/ComponentBox';\nimport { hamburger as hamburgerIcon } from 'dnb-ui-lib/src/icons/secondary_icons';\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" components={components}>\n      <MDXTag name=\"h1\" components={components}>{`Component Properties`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Every `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"/uilib/components\"\n        }}>{`Component`}</MDXTag>{` has its own `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`properties`}</MDXTag>{` to make them work for a variety of cases. You may have a look at the table describing all the possibilities. Check out for example the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"/uilib/components/button#info\"\n        }}>{`Button Properties`}</MDXTag>{`.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Below are some examples. You can even modify them right away in the Browser.`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Large Buttons & Icons`}</MDXTag>\n      <ComponentBox>\n        {`\n<Button\n  variant=\"secondary\"\n  text=\"Secondary Button\"\n  icon=\"chevron_right_medium\"\n  size=\"large\"\n/>\n<Button\n  icon=\"chevron_right\"\n  icon_size=\"medium\"\n  size=\"large\"\n/>\n`}\n      </ComponentBox>\n      <MDXTag name=\"h2\" components={components}>{`Extended example`}</MDXTag>\n      <ComponentBox scope={{\n        hamburgerIcon\n      }} useRender>\n        {`\nconst Wrapper = styled.div\\`\n  .dnb-button {\n    --button-width: 4rem;\n    --button-height: 4rem;\n    --button-border-radius: 2rem;\n    svg {\n      color: fuchsia;\n    }\n  }\n\\`\nconst myHandler = () => alert('Hello')\nrender(\n  <Wrapper>\n    <Button\n      variant=\"secondary\"\n      icon={hamburgerIcon}\n      size=\"default\"\n      on_click={myHandler}\n    />\n    <Button\n      variant=\"secondary\"\n      size=\"default\"\n      on_click={myHandler}\n    >\n      <Icon icon={hamburgerIcon} />\n    </Button>\n  </Wrapper>\n)\n`}\n      </ComponentBox>\n      <MDXTag name=\"h2\" components={components}>{`Web Components and properties`}</MDXTag>\n      <MDXTag name=\"blockquote\" components={components}>\n        <MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`What if a property has to change at runtime?`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Changing a property (`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`props`}</MDXTag>{`) at runtime is a common thing in React. But also `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dnb-ui-lib`}</MDXTag>{` web components support `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`prop`}</MDXTag>{` changes.\nKeep in mind that not all components are tested to the last detail.\nSo, if you come over some special use cases, please contribute back and make a pull request.`}</MDXTag>\n      <ComponentBox useRender>\n        {`\nconst Component = () => {\n  const time = new Date().toLocaleTimeString()\n  return (\n    <>\n      <dnb-form-label for_id=\"form-input\">\n        Web Component property updates\n      </dnb-form-label>\n      <dnb-input id=\"form-input\" value={time} />\n    </>\n  )\n}\nconst RenderHelper = () => {\n  useEffect(() => {\n    const timer = setInterval(() => render(<RenderHelper />), 1e3)\n    return () => clearTimeout(timer)\n  }, [])\n  return <Component />\n}\nrender(<RenderHelper />)\n`}\n      </ComponentBox>\n           </MDXTag>;\n  }\n\n}\nMDXContent.isMDXComponent = true;\nexport const _frontmatter = {\n  \"title\": \"Component Properties\",\n  \"draft\": false,\n  \"order\": 6\n};\n      "],"sourceRoot":""}