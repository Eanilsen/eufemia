{"version":3,"sources":["webpack:///./src/pages/welcome-advice.md","webpack:///./src/pages/uilib.md","webpack:///./src/shared/inlineTags/CodeBlock.js","webpack:///./src/shared/inlineTags/pre.js"],"names":["_react","__webpack_require__","_tag","_ref","components","_objectWithoutProperties","default","createElement","MDXTag","name","title","draft","_interopRequireDefault","_welcomeAdvice","_src","_CodeBlock","Logo","size","language","header","_prismReactRenderer","_interopRequireWildcard","_nightOwl","_reactLive","_pre","exampleCode","children","isReactLive","reactLive","className","split","console","log","_typeof","LiveProvider","code","String","trim","LiveEditor","LiveError","LivePreview","_extends","defaultProps","theme","prismTheme","_ref2","style","tokens","getLineProps","getTokenProps","p","cleanTokens","map","line","i","key","token","tokensLength","length","lastToken","empty","slice","Pre","is","m","displayName"],"mappings":"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","file":"component---src-pages-uilib-md-862fb4ba53c76c200163.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\n\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h2\" components={components}>{`Welcome Info`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`blabla`}</MDXTag></MDXTag>\n\nexport const _frontmatter = {\"title\":\"Welcome Info\",\"draft\":true};\n\n  ","import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport Advice from \"Pages/welcome-advice.md\";\nimport { Logo } from 'dnb-ui-lib/src'\nimport CodeBlock from 'Tags/CodeBlock'\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}>\n{/* import Notification from \"Parts/Notification\"; */}\n\n{/* import WelcomeInfo from \"Parts/WelcomeInfo\"; */}\n\n<MDXTag name=\"h1\" components={components}>{`UI Library`}</MDXTag>\n{/* <WelcomeInfo /> */}\n<Advice />\n{/* prettier-ignore-start */}\n\n<Logo size=\"200\" />\n<CodeBlock language=\"jsx\">{`\n  <Logo size=\"200\" />\n`}</CodeBlock>\n{/* prettier-ignore-end */}\n\n{/* <Notification type=\"info\">\n<p>Some info</p>\n</Notification> */}\n{/* prettier-ignore-start */}\n\n{/* export default ({children}) => (<div>\n  {children}\n  <Info />\n</div>) */}\n{/* prettier-ignore-end */}\n</MDXTag>\n\nexport const _frontmatter = {\"header\":\"UI Library\",\"title\":\"UI Library\"};\n\n  ","/**\n * Inline Tag\n *\n */\n\nimport React from 'react'\nimport Highlight, { defaultProps } from 'prism-react-renderer'\nimport prismTheme from 'prism-react-renderer/themes/nightOwl'\nimport {\n  LiveProvider,\n  LiveEditor,\n  LiveError,\n  LivePreview\n} from 'react-live'\n\nimport Pre from './pre'\n\n/* eslint-disable react/jsx-key */\nconst CodeBlock = ({\n  language,\n  children: exampleCode,\n  reactLive: isReactLive,\n  className\n}) => {\n  if (!language)\n    language = ((className || '').split(/-/) || [null, 'jsx'])[1]\n\n  if (isReactLive && language === 'jsx') {\n    console.log('exampleCode', language, typeof exampleCode)\n    return (\n      <LiveProvider\n        code={\n          typeof exampleCode === 'string'\n            ? String(exampleCode).trim()\n            : null\n        }\n        // transformCode={\n        //   typeof exampleCode === 'function' ? exampleCode : null\n        // }\n      >\n        <LiveEditor />\n        <LiveError />\n        <LivePreview />\n      </LiveProvider>\n    )\n  } else {\n    return (\n      <Highlight\n        {...defaultProps}\n        code={String(exampleCode).trim()}\n        language={language}\n        theme={prismTheme}\n      >\n        {({ className, style, tokens, getLineProps, getTokenProps }) => (\n          <Pre className={className} style={style} p={3}>\n            {cleanTokens(tokens).map((line, i) => (\n              <div {...getLineProps({ line, key: i })}>\n                {line.map((token, key) => (\n                  <span {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            ))}\n          </Pre>\n        )}\n      </Highlight>\n    )\n  }\n}\n\nexport default CodeBlock\n\n/** Removes the last token from a code example if it's empty. */\nconst cleanTokens = tokens => {\n  const tokensLength = tokens.length\n  if (tokensLength === 0) {\n    return tokens\n  }\n  const lastToken = tokens[tokensLength - 1]\n  if (lastToken.length === 1 && lastToken[0].empty) {\n    return tokens.slice(0, tokensLength - 1)\n  }\n  return tokens\n}\n","/**\n * Inline Tag\n *\n */\n\nimport system from 'system-components/emotion'\n\nconst Pre = system(\n  {\n    is: 'pre',\n    // by commenting this out, we use the reset.scss styling of fonts\n    // fontSize: 16,\n    // fontFamily: 'monospace',\n    m: 0\n  }\n  // {\n  //   overflow: 'auto'\n  // },\n  // 'fontFamily',\n  // 'space',\n  // 'color'\n)\nPre.displayName = 'Pre'\n\nexport default Pre\n"],"sourceRoot":""}