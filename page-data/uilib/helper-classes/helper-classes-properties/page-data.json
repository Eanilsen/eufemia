{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/helper-classes/helper-classes-properties","webpackCompilationHash":"0a9646589a15f332ebe9","result":{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"","description":null,"fullscreen":null},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Selector\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  })), mdx(\"p\", null, \"| \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-core-style\"), \" | In order to be able to have the core Body Style inside a wrapper and available for all its children. The Body Style contains among others stlyes, both the correct line-height and a CSS reset. |\\n| \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-app-content-inner\"), \" | Adds simply a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"overflow:hidden\"), \" to cut everything outside of our \\\"content-inner\\\" |\\n| \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-tab-focus\"), \" | Removes default focus outline from a focusable element and adds a custom visual focus state when is focused by a tab key. There is also: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-mouse-focus\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-focus-ring\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-no-focus\"), \" |\\n| \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-skip-link\"), \" | A default Skip Link style. More details in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/usage/accessibility/focus#skip-link\"\n  }), \"Focus Secion\"), \" |\\n| \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-spacing\"), \" | Default spacing styles. More details in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/usage/customisation/styling#spacing\"\n  }), \"Styling\"), \" |\\n| \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-sr-only\"), \" | Visually hides an element, but is still reachable by screen readers. (\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"sr\"), \" stands for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Screen Reader\"), \") |\\n| \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-not-sr-only\"), \" | The opposite of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-sr-only\"), \" |\\n| \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-unstyled-list\"), \" | Removes default styling for lists. Applies to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ul\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ol\"), \" elements |\\n| \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-hide-on-mobile\"), \" | Hides element on screens that are below the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"medium\"), \" size. This value of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"medium\"), \" can be found in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"css/core/utilities.scss\"), \" |\\n| \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-mobile-exclusive\"), \" | The opposite of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-hide-on-mobile\"), \", which means it will only be visible on screens up to the size of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"medium | |\"), \"dnb-width-limit\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| Our main wrapping class for containers. It has a max-width and a left and right padding which varies based on screen sizes | |\"), \"dnb-belt\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"| A wrapping class which adds a background color and padding to top and bottom | |\"), \"dnb-nudge` | A visual nudging tool. It has a modifying class which tells the element if it should expand horizontally or vertically. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NB! Use with caution!\"), \" |\"), mdx(\"h3\", null, \"More about \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"dnb-app-content-inner\")), mdx(\"p\", null, \"Use this class where a style is trying to add background or a lines to the very outer side of the page. e.g. Tabs are using this technique\\nIn some cases we don't want to have that effect. For instance, if we have a menu (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aside\"), \") to the left or right side.\"), mdx(\"h3\", null, \"More about \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"dnb-nudge\")), mdx(\"p\", null, \"It also has a data attribute which takes the amount of nudges. One nudge = \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1rem\"), \", two nudges = \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"3rem\"), \". It takes up to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"10 nudges\"), \". See example for usage.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"933a0e9b-855c-5fd0-b319-8c98fbbb7adb","prev":{"id":"556ecc8b-7886-5256-bf6c-12f61a4edd56","fields":{"slug":"uilib/helper-classes/helper-classes-info"}},"next":{"id":"dcca1bab-88b8-5681-b227-c70e4fef3ae0","fields":{"slug":"uilib/info/about-watching-releases"}}}}}