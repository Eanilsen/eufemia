{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/typography","webpackCompilationHash":"b4751daf59a4c864667d","result":{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"Typography","description":null,"fullscreen":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Typography\",\n  \"icon\": \"typography\",\n  \"draft\": false,\n  \"order\": 5\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Typography\"), mdx(\"p\", null, \"Fonts are handled automatically once the CSS packages \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dnb-ui-core\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dnb-ui-basis\"), \" are loaded.\"), mdx(\"p\", null, \"Every typography HTML element, like headings and paragraphs, have a defined \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"height\"), \", respective \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"line-height\"), \" so everything falls exactly into the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"8 pixel grid\"), \".\"), mdx(\"p\", null, \"You don't need to define the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"font-family\"), \" ever, but rather use CSS Custom Properties for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"font-weight\"), \".\"), mdx(\"p\", null, \"Read more how to use the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/typography/font-weights/\"\n  }), \"different weights\"), \".\"), mdx(\"h2\", null, \"Font Face\"), mdx(\"p\", null, \"The DNB default Font Family is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Fedra Sans Std\"), \". This font, together with it's weights is loaded and imported with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@font-face\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/css/core/fonts.scss\"), \". The font family is included in the library package.\"), mdx(\"h2\", null, \"Headings\"), mdx(\"p\", null, \"The DNB UX team has currently only defined tree levels of heading styles (h1, h2 and h3). But level 4, 5 and 6 are also supported by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dnb-ui-lib\"), \".\"), mdx(\"p\", null, \"If you wish to have a header \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"look like\"), \" a heading, you can use these classes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-h1\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-h1--small\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-h2\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-lead\"), \" (h3)\")), mdx(\"p\", null, \"Read more about \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/usage/best-practices/for-typography\"\n  }), \"best practices for typography\"), \".\"), mdx(\"h3\", null, \"Headings in React\"), mdx(ComponentBox, {\n    hideOnTest: true,\n    caption: \"Default Heading typography using React JSX\",\n    mdxType: \"ComponentBox\"\n  }, \"\\n<H1 style_type=\\\"small\\\">H1 small</H1>\\n<H1>H1</H1>\\n<H2>H2</H2>\\n<Lead>Lead</Lead>\\n\"), mdx(\"h3\", null, \"Headings with vanilla HTML\"), mdx(CodeBlock, {\n    reactLive: true,\n    hideCode: true,\n    caption: \"Default Heading typography\",\n    mdxType: \"CodeBlock\"\n  }, \"\\n<h1 class=\\\"dnb-h1\\\">H1</h1>\\n<h2 class=\\\"dnb-h2\\\">H2</h2>\\n<h3 class=\\\"dnb-lead\\\">Lead</h3>\\n\"), mdx(CodeBlock, {\n    reactLive: true,\n    hideCode: true,\n    \"data-dnb-test\": \"heading-additional\",\n    caption: \"Additional Heading typography\",\n    mdxType: \"CodeBlock\"\n  }, \"\\n<article>\\n  <h1 class=\\\"dnb-h1\\\">\\n    <small>Small H1</small> Normal H1\\n  </h1>\\n  <h1 class=\\\"dnb-h1 dnb-h1--small\\\">Small H1 with class</h1>\\n  <h2 class=\\\"dnb-h2\\\">\\n    Normal H2 <small>Small H2</small>\\n  </h2>\\n  <h3 class=\\\"dnb-lead\\\">\\n    Normal H3/Lead <small>Small H3/Lead</small>\\n  </h3>\\n</article>\\n\"), mdx(\"h3\", null, \"Paragraph\"), mdx(\"p\", null, \"Paragraph comes in several variants. You can use these classes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-p\"), \" (Body)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-p--demi\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-p--medium\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-p--ingress\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-p--small\"))), mdx(\"h3\", null, \"Paragraphs in React\"), mdx(ComponentBox, {\n    hideOnTest: true,\n    caption: \"Default paragraph typography using React JSX\",\n    mdxType: \"ComponentBox\"\n  }, \"\\n  <P>Paragraph (Body)</P>\\n  <P style_type=\\\"demi\\\">Paragraph Demi</P>\\n  <P style_type=\\\"medium\\\">Paragraph Medium</P>\\n  <P style_type=\\\"ingress\\\">Paragraph Ingress</P>\\n  <P style_type=\\\"small\\\">Paragraph Small</P>\\n  <P style_type=\\\"small demi\\\">Paragraph Demi Small</P>\\n  <P style_type=\\\"small medium\\\">Paragraph Medium Small</P>\\n  \"), mdx(\"h3\", null, \"Paragraphs with vanilla HTML\"), mdx(CodeBlock, {\n    reactLive: true,\n    hideCode: true,\n    \"data-dnb-test\": \"paragraph-default\",\n    caption: \"Default Paragraph styles\",\n    mdxType: \"CodeBlock\"\n  }, \"\\n<p class=\\\"dnb-p\\\">\\n  Here is a paragraph text<br />\\n  <a href=\\\"/\\\" class=\\\"dnb-anchor\\\">Anchor / Text Link</a><br />\\n  <b>Bold paragraph</b><br />\\n  <strong>Strong paragraph</strong><br />\\n  <i>Italic paragraph</i><br />\\n  <u>Underline paragraph</u><br />\\n  Numbers 0123456789<br />\\n  <code class=\\\"dnb-code\\\">Code paragraph</code><br />\\n  <cite>Cite paragraph</cite><br />\\n</p>\\n\"), mdx(CodeBlock, {\n    reactLive: true,\n    hideCode: true,\n    \"data-dnb-test\": \"paragraph-small\",\n    caption: \"Paragraph with small font-size\",\n    mdxType: \"CodeBlock\"\n  }, \"\\n<p class=\\\"dnb-p dnb-p--small\\\">\\n  Here is a small paragraph text<br />\\n  <a href=\\\"/\\\" class=\\\"dnb-anchor\\\">Anchor / Text Link</a><br />\\n  <b>Bold paragraph</b><br />\\n  <strong>Strong paragraph</strong><br />\\n  <i>Italic paragraph</i><br />\\n  <u>Underline paragraph</u><br />\\n  Numbers 0123456789<br />\\n  <code class=\\\"dnb-code\\\">Code paragraph</code><br />\\n  <cite>Cite paragraph</cite><br />\\n</p>\\n\"), mdx(CodeBlock, {\n    reactLive: true,\n    hideCode: true,\n    \"data-dnb-test\": \"paragraph-additional\",\n    caption: \"Additional Paragraph formatting (not defined yet)\",\n    mdxType: \"CodeBlock\"\n  }, \"\\n<p class=\\\"dnb-p\\\">\\n  <del>Deleted paragraph</del><br />\\n  <mark>Marked paragraph</mark><br />\\n  <ins>Inserted paragraph</ins><br />\\n  <sub>Subscript paragraph</sub><br />\\n  <sup>Superscript paragraph</sup><br />\\n</p>\\n\"), mdx(\"p\", null, \"Read more \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/quickguide-designer/fonts/\"\n  }), \"about Fonts in the Designer Guides\")), mdx(\"h2\", null, \"Anchor\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-anchor\"), \" \", mdx(\"a\", {\n    href: \"/\",\n    className: \"dnb-anchor\"\n  }, \"Anchor with default style\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-anchor--hover\"), \" \", mdx(\"a\", {\n    href: \"/\",\n    className: \"dnb-anchor dnb-anchor--hover\"\n  }, \"Hover Style\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-anchor--active\"), \" \", mdx(\"a\", {\n    href: \"/\",\n    className: \"dnb-anchor dnb-anchor--active\"\n  }, \"Active Style\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".dnb-anchor--focus\"), \" \", mdx(\"a\", {\n    href: \"/\",\n    className: \"dnb-anchor dnb-anchor--focus\"\n  }, \"Focus Style\"))), mdx(\"p\", null, \"Read more about the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/elements/anchor\"\n  }), \"Anchor / Text Link\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"083c94e5-96a6-598c-8ba3-80f0ade985b2","prev":{"id":"1f9d5b8a-e486-5ad1-95df-2ea3810210a7","fields":{"slug":"brand/third/index"}},"next":{"id":"11a1366e-348a-5e73-a4a2-ce8bb964b765","fields":{"slug":"uilib/development/changes"}}}}}