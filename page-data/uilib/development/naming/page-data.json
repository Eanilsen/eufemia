{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/development/naming","webpackCompilationHash":"6705564827714f040758","result":{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"Naming conventions","description":null,"fullscreen":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Naming conventions\",\n  \"draft\": false,\n  \"order\": 6\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Naming conventions\"), mdx(\"p\", null, \"The DNB Design System Eufemia uses the following naming conventions.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Formatting styles\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"pascal case\"), \" also known as \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"upper camel case\"), \". Every word upper case. Example: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PascalCase\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"camel case\"), \" also known as \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"lower camel case\"), \". First word lower case. Example: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"camelCase\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"lisp case\"), \" also known as \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"kebab case\"), \". Only lower case letters. Example: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"lisp-case\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"snake case\"), \". Only lower case letters. Example: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"snake_case\"))), mdx(\"h2\", null, \"React components\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"React Components, both as files and as components use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"pascal case\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The folder containing the component uses \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"lisp case\"), \".\")), mdx(\"h2\", null, \"Web components\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web components use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"lisp case\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"They are prefixed with: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dnb-\"))), mdx(\"h2\", null, \"CSS / SCSS\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSS classes and the files containing the styles use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"lisp case\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSS classes are prefixed with: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dnb-\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSS \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Custom Properties\"), \" (CSS Variables) use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"lisp case\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SCSS Mixins use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"camel case\"), \".\")), mdx(\"h2\", null, \"Javascript\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Functions\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Variables\"), \" use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"camel case\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Classes\"), \" use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"pascal case\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Other Javascript files use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"lisp case\"), \".\")), mdx(\"h2\", null, \"Events\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Event names use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"snake case\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"They have to describe what they are aiming to do. Like: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"on_click\"))), mdx(\"h2\", null, \"Icons\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Icon names use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"snake case\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"They have to describe what they are aiming to meant for. Like: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"chevron_right\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sizes are added as a postfix. Like: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"chevron_right_medium\"))), mdx(\"h2\", null, \"Documentation\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Pages\"), \" and directories use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"lisp case\"), \".\")), mdx(\"hr\", null), mdx(\"p\", null, \"More info about the cases can be found at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Letter_case#Special_case_styles\"\n  }), \"Wikipedia Special case styles\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"df95681a-17fc-5bf2-94a9-1d452c49816d","prev":{"id":"dd30317b-0b35-538c-98fc-0fa86c25bcf9","fields":{"slug":"uilib/elements/other"}},"next":{"id":"6df621f9-a8f3-599a-8951-16b7e83b1c7a","fields":{"slug":"uilib/elements/anchor"}}}}}