{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/components/form-row/form-row-info","webpackCompilationHash":"3da90c3e74ff515ee48f","result":{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"","description":null,"fullscreen":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"draft\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Description\"), mdx(\"p\", null, \"The FormRow component is a helper to archive more easily often used DNB form layout setups. By default a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"FormRow\"), \" is using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<formset>\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<legend>\"), \" HTML elements - if a label property is provided.\"), mdx(\"h3\", null, \"Layout direction\"), mdx(\"p\", null, \"There are three possible layout properties for the FormRow children:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"direction\"), \" Children components direction\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"label_direction\"), \" Children's label direction\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vertical\"), \" Forces both to be vertically\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"/** Only the component labels will be placed vertically */\\n<FormRow label=\\\"Legend label:\\\" label_direction=\\\"vertical\\\">\\n  ...\\n</FormRow>\\n\")), mdx(\"h3\", null, \"Spacing\"), mdx(\"p\", null, \"To give a FormRow space, properties from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/components/space#tab-properties\"\n  }), \"Space\"), \" are supported:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"/** The FormRow will then have a \\\"margin-top: 2.5rem;\\\" */\\n<FormRow top=\\\"large x-small\\\" ... >\\n  ...\\n</FormRow>\\n\\n/** ... or go crazy */\\n<FormRow top=\\\"large medium small\\\" ... >\\n  ...\\n</FormRow>\\n\")), mdx(\"h3\", null, \"Provider\"), mdx(\"p\", null, \"If You are using React, You can make use of a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Provider\"), \" to support properties for all nested \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"FormRow\"), \"s, like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import Provider from `dnb-ui-lib/shared/Provider`\\n\\nrender(\\n  <Provider formRow={{ vertical: true }}>\\n    <FormRow>I am vertical now</FormRow>\\n    <FormRow>I am vertical now</FormRow>\\n  </Provider>\\n)\\n\")), mdx(\"h2\", null, \"Demos\"), mdx(Examples, {\n    mdxType: \"Examples\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"d41ec134-25f0-5e9f-842b-7ad278c71662","prev":{"id":"d7db5ae2-d85f-540b-afd3-54d66185c3a9","fields":{"slug":"uilib/components/form-label/form-label-info"}},"next":{"id":"bf504720-83d8-50f7-8012-aa89b1594b07","fields":{"slug":"uilib/components/form-label/form-label-properties"}}}}}