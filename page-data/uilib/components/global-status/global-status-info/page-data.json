{"componentChunkName":"component---src-templates-mdx-js","path":"/uilib/components/global-status/global-status-info","webpackCompilationHash":"b07f7c19e83e9fcc44c2","result":{"data":{"site":{"siteMetadata":{"description":"Eufemia Design System is the go to place for all who has to design, develop and make digital WEB applications for DNB."}},"mdx":{"frontmatter":{"title":"","description":null,"fullscreen":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"draft\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Description\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GlobalStatus\"), \" is a complex component meant for displaying a global Application notifications or a summary of a form ( displaying form errors, messages etc. ).\\nBy default, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GlobalStatus\"), \" is automatically working together with the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/components/form-status\"\n  }), \"FormStatus\"), \" component.\"), mdx(\"h3\", null, \"FormStatus default behavior\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Once a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"FormStatus\"), \" is show, the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"main\"), \" \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"GlobalStatus\"), \" will show up.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The page will scroll to the dedicated \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"GlobalStatus\"), \".\")), mdx(\"h3\", null, \"Several Global statuses\"), mdx(\"p\", null, \"Normally, You only want to have \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"one\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GlobalStatus\"), \" inside Your application. But You can have several in parallel. But make sure You give every other a new ID:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<GlobalStatus id=\\\"other-global-status\\\" />\\n\")), mdx(\"h3\", null, \"Where to put it\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GlobalStatus\"), \" component should be positioned right under the header. By default, it uses \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"main\"), \" as the ID.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Or as a secondary summary of errors in a submit form. Keep in mind, by default form components like \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/uilib/components/input\"\n  }), \"Input\"), \" are using the ID \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"main\"), \". To make sure the build in \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/uilib/components/form-status\"\n  }), \"FormStatus\"), \" is sending along the message to another \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GlobalStatus\"), \", You have to set the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"status_id\"), \", like:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Input status_id=\\\"other-global-status\\\" ... />\\n\")), mdx(\"p\", null, \"But You can also make use of the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/components/form-set\"\n  }), \"FormSet\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/uilib/components/form-row\"\n  }), \"FormRow\"), \" witch will send along the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"status_id\"), \" the underlaying/children components, like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<FormSet status_id=\\\"other-global-status\\\">...</FormSet>\\n\")), mdx(\"h2\", null, \"Demos\"), mdx(Examples, {\n    mdxType: \"Examples\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"67b5b7d4-bec8-5235-b256-accca24fbf43","prev":{"id":"443ec1e1-9603-5c88-abda-a73a6b572e0a","fields":{"slug":"uilib/components/form-status/form-status-info"}},"next":{"id":"d212c293-d456-58a0-9348-5cf06164c635","fields":{"slug":"uilib/components/form-set/form-set-properties"}}}}}