(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{1171:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",function(){return i}),n.d(t,"default",function(){return c});n(16),n(14),n(20),n(19),n(18),n(22),n(4),n(5);var r=n(0);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p,i={fullscreen:!0,draft:!0,order:6},m=(p="Intro",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),Object(r.mdx)("div",e)}),d={_frontmatter:i},l="wrapper";function c(e){var t=e.components,n=o(e,["components"]);return Object(r.mdx)(l,a({},d,n,{components:t,mdxType:"MDXLayout"}),Object(r.mdx)(m,{mdxType:"Intro"},Object(r.mdx)("h1",null,"Typography"),Object(r.mdx)("p",null,"Fonts are handled automatically once the CSS packages ",Object(r.mdx)("strong",{parentName:"p"},"dnb-ui-core")," or ",Object(r.mdx)("strong",{parentName:"p"},"dnb-ui-basis")," are loaded."),Object(r.mdx)("p",null,"Every typography HTML element, like headings and paragraphs, have a defined ",Object(r.mdx)("inlineCode",{parentName:"p"},"height"),", respective ",Object(r.mdx)("inlineCode",{parentName:"p"},"line-height")," so everything falls exactly into the ",Object(r.mdx)("strong",{parentName:"p"},"8 pixel grid"),"."),Object(r.mdx)("p",null,"You don't need to define the ",Object(r.mdx)("inlineCode",{parentName:"p"},"font-family")," ever, but rather use CSS Custom Properties for ",Object(r.mdx)("inlineCode",{parentName:"p"},"font-weight"),"."),Object(r.mdx)("pre",null,Object(r.mdx)("code",a({parentName:"pre"},{className:"language-css"}),"font-weight: var(--font-weight-demi);\n")),Object(r.mdx)("p",null,"The default ",Object(r.mdx)("a",a({parentName:"p"},{href:"!/uilib/typography/font-weights"}),"font-weight")," is currently ",Object(r.mdx)("strong",{parentName:"p"},"Book"),", alongside ",Object(r.mdx)("em",{parentName:"p"},"Demi")," and ",Object(r.mdx)("em",{parentName:"p"},"Medium"),"."),Object(r.mdx)("p",null,"The default ",Object(r.mdx)("em",{parentName:"p"},"font lining")," is ",Object(r.mdx)("strong",{parentName:"p"},"Proportional Lining"),". But in some circumstances you may use, alongside with the UX designer, ",Object(r.mdx)("a",a({parentName:"p"},{href:"!/uilib/typography/numbers"}),"Tabular Lining"),"."),Object(r.mdx)("p",null,"Read ",Object(r.mdx)("a",a({parentName:"p"},{href:"!/uilib/typography"}),"more about Typography")),Object(r.mdx)("hr",null),Object(r.mdx)("p",null,Object(r.mdx)("a",a({parentName:"p"},{href:"/uilib/intro/07-color-usage?fullscreen"}),"Next - Color usage"))))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-uilib-intro-06-typography-md-56b9c00464515d1d829d.js.map