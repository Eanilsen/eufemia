{"version":3,"sources":["webpack:///./src/pages/uilib/development/deploy.md"],"names":["_frontmatter","title","status","draft","order","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_8__","_extends","mdxType","parentName","href","isMDXComponent"],"mappings":"gzBAKO,IAAMA,EAAe,CAC1BC,MAAS,SACTC,OAAU,MACVC,OAAS,EACTC,MAAS,GAQLC,EAAc,CAClBL,gBAEIM,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,EAAAH,EAAA,gBACD,OAAOI,OAAAC,EAAA,IAAAD,CAACN,EAADQ,EAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EH,OAAAC,EAAA,IAAAD,CAAA,oBACAA,OAAAC,EAAA,IAAAD,CAAA,wDAAmDA,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,cAAnD,oCACAJ,OAAAC,EAAA,IAAAD,CAAA,0BACAA,OAAAC,EAAA,IAAAD,CAAA,uCAAkCA,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,4BAAlC,0BAAiIJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,cAAjI,qEACAJ,OAAAC,EAAA,IAAAD,CAAA,sCAAiCA,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,oBAAjC,6BAA2HJ,OAAAC,EAAA,IAAAD,CAAA,UAAQI,WAAW,KAAnB,UAA3H,uDACAJ,OAAAC,EAAA,IAAAD,CAAA,kFAA6EA,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,kBAA7E,oBAA4JJ,OAAAC,EAAA,IAAAD,CAAA,UAAQI,WAAW,KAAnB,cAA5J,yHACAJ,OAAAC,EAAA,IAAAD,CAAA,gCACAA,OAAAC,EAAA,IAAAD,CAAA,sDAAiDA,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,kBAAjD,SAAqHJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,KAAvB,kBAArH,2CACmCJ,OAAAC,EAAA,IAAAD,CAAA,UAAQI,WAAW,KAAnB,gBADnC,0HAEAJ,OAAAC,EAAA,IAAAD,CAAA,SAAGA,OAAAC,EAAA,IAAAD,CAAA,UAAQI,WAAW,KAAnB,SAAH,sCACAJ,OAAAC,EAAA,IAAAD,CAAA,6BACAA,OAAAC,EAAA,IAAAD,CAAA,mEACAA,OAAAC,EAAA,IAAAD,CAAA,UACEA,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,2DACAJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,gCAAqDJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,MAAvB,oBAArD,KACAJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,wCAA6DJ,OAAAC,EAAA,IAAAD,CAAA,UAAQI,WAAW,MAAKJ,OAAAC,EAAA,IAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,UAAa,CAC1GC,KAAQ,8BADuE,wBAGrFL,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,sCAA2DJ,OAAAC,EAAA,IAAAD,CAAA,cAAYI,WAAW,MAAvB,kBAA3D,WACAJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,sDACAJ,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,UAA+BJ,OAAAC,EAAA,IAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,MAAS,CAClDC,KAAQ,gFADmB,iBAG/BL,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,iEAAsFJ,OAAAC,EAAA,IAAAD,CAAA,IAAAE,EAAA,CAAGE,WAAW,MAAS,CACzGC,KAAQ,iEAD0E,qBAAtF,KAGAL,OAAAC,EAAA,IAAAD,CAAA,MAAII,WAAW,MAAf,yDAKNT,EAAWW,gBAAiB","file":"component---src-pages-uilib-development-deploy-md-b672237a0834c77fc25f.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Deploy\",\n  \"status\": \"imp\",\n  \"draft\": false,\n  \"order\": 3\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Deploy`}</h1>\n    <p>{`Publishing new versions to the NPM Package (`}<inlineCode parentName=\"p\">{`dnb-ui-lib`}</inlineCode>{`) is handled by a Deploy Server.`}</p>\n    <h2>{`CI Structure`}</h2>\n    <p>{`Actually, both the Portal (`}<inlineCode parentName=\"p\">{`dnb-design-system-portal`}</inlineCode>{`) and the NPM Package (`}<inlineCode parentName=\"p\">{`dnb-ui-lib`}</inlineCode>{`) are deployed and build by a Continuous Integration (CI) Server.`}</p>\n    <p>{`Once You push Your branch `}<inlineCode parentName=\"p\">{`ftr/your-feature`}</inlineCode>{` (or what ever) to remote `}<strong parentName=\"p\">{`origin`}</strong>{`, all tests will be run against Your latest pushes.`}</p>\n    <p>{`Merges from a Pull Request and other pushes to the development branch `}<inlineCode parentName=\"p\">{`origin/develop`}</inlineCode>{`, will trigger a `}<strong parentName=\"p\">{`test build`}</strong>{` of the Portal. This way me make sure that a new Portal version can be build, before we actually publish a new build.`}</p>\n    <h3>{`The Release Branch`}</h3>\n    <p>{`Make sure You only make Pull Request from `}<inlineCode parentName=\"p\">{`origin/develop`}</inlineCode>{` into `}<inlineCode parentName=\"p\">{`origin/release`}</inlineCode>{`.\nThe Release Branch is more kind of a `}<strong parentName=\"p\">{`slave branch`}</strong>{`. It reflects the latest version, but is actually only used to publish new versions and to make builds for the Portal.`}</p>\n    <p><strong parentName=\"p\">{`TODO:`}</strong>{` GitFlow and CI structure graphics`}</p>\n    <h3>{`Steps to follow`}</h3>\n    <p>{`The steps, from code changes to production builds are:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Make Your changes and write tests and test the codebase`}</li>\n      <li parentName=\"ol\">{`Update eventually snapshots (`}<inlineCode parentName=\"li\">{`yarn test:update`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\">{`Commit Your changes with the correct `}<strong parentName=\"li\"><a parentName=\"strong\" {...{\n            \"href\": \"/uilib/development/commit\"\n          }}>{`message decoration`}</a></strong></li>\n      <li parentName=\"ol\">{`Push or make a Pull Request to the `}<inlineCode parentName=\"li\">{`origin/develop`}</inlineCode>{` branch`}</li>\n      <li parentName=\"ol\">{`Wait until the CI Server has validated the commits`}</li>\n      <li parentName=\"ol\">{`Make a `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/dnbexperience/eufemia/compare/release...develop?expand=1\"\n        }}>{`Pull Request`}</a></li>\n      <li parentName=\"ol\">{`Once the Pull Request will be approved by one of the authored `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/dnbexperience/eufemia/graphs/contributors\"\n        }}>{`repo contributors`}</a>{`,`}</li>\n      <li parentName=\"ol\">{`The CI Server will deploy the Portal and NPM builds`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}