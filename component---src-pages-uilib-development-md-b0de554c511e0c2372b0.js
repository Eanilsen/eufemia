(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{1157:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return T}),t.d(n,"_frontmatter",function(){return M});var a=t(22),o=t.n(a),p=t(12),s=t.n(p),c=t(10),r=t.n(c),m=t(13),i=t.n(m),d=t(11),l=t.n(d),h=t(14),g=t.n(h),u=t(2),b=t(4),f=t.n(b),j=t(0),D=t(67),O=t(27),T=function(e){function n(e){var t;return s()(this,n),(t=i()(this,l()(n).call(this,e))).layout=null,t}return g()(n,e),r()(n,[{key:"render",value:function(){var e=this.props,n=e.components;o()(e,["components"]);return Object(u.d)(j.MDXTag,{name:"wrapper",components:n},Object(u.d)(j.MDXTag,{name:"h1",components:n},"Development"),Object(u.d)(j.MDXTag,{name:"p",components:n},"The ",Object(u.d)(j.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"dnb-ui-lib")," uses a ",Object(u.d)(j.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://nodejs.org"}},"Node.js")," based setup with a lot of auto generated code to make the ",Object(u.d)(j.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://reactjs.org"}},"React")," based components and patterns."),Object(u.d)(j.MDXTag,{name:"h2",components:n},"Repository"),Object(u.d)(j.MDXTag,{name:"p",components:n},Object(u.d)(j.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/dnbexperience/eufemia"}},Object(u.d)(O.h,{icon:D.default,size:"default"})," Eufemia at GitHub")),Object(u.d)(j.MDXTag,{name:"h2",components:n},"Install the repo locally on your machine"),Object(u.d)(j.MDXTag,{name:"pre",components:n},Object(u.d)(j.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-bash"}},"# Clone the repo into your project working directory\n$ git clone https://github.com/dnbexperience/eufemia.git\n\n# Change to the directory\n$ cd eufemia\n\n# Change to the latest and most up to date Branch\n$ git checkout develop\n\n# And install the dependencies\n$ yarn install\n\n# Once the installation is done, create a local build\n$ yarn build\n\n# Optionally, run the portal locally in watch mode (http://localhost:8000)\n$ yarn start\n")),Object(u.d)(j.MDXTag,{name:"h2",components:n},"Why Yarn and not Lerna?"),Object(u.d)(j.MDXTag,{name:"p",components:n},"The mono repo ",Object(u.d)(j.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"dnb-design-system")," uses ",Object(u.d)(j.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://yarnpkg.com/"}},"Yarn")," (>= v1.10.1) to maintain the ",Object(u.d)(j.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://yarnpkg.com/en/docs/workspaces"}},"workspace functionality"),". Instead of using ",Object(u.d)(j.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"npm link")," or ",Object(u.d)(j.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"yarn link"),", we use packages. This simplifies the linking. and shared modules between ",Object(u.d)(j.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://docs.npmjs.com/getting-started/packages"}},"packages"),".\nYarn offers a simpler approach to workspaces, but is way more powerful in managing dependencies."))}}]),n}(f.a.Component);T.isMDXComponent=!0;var M={title:"Development",icon:"development",draft:!1}}}]);
//# sourceMappingURL=component---src-pages-uilib-development-md-b0de554c511e0c2372b0.js.map